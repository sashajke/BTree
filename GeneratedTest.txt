

START - TEST 0
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(30);
generatedTree.insert2pass(32);
generatedTree.insert2pass(48);
generatedTree.insert2pass(18);
generatedTree.insert2pass(31);
generatedTree.insert2pass(37);
generatedTree.insert2pass(40);
generatedTree.insert2pass(67);
generatedTree.insert2pass(63);
generatedTree.insert2pass(11);
generatedTree.insert2pass(38);
generatedTree.insert2pass(96);
generatedTree.insert2pass(34);
generatedTree.insert2pass(22);
------------------------------

└── 32
    ├── 30
    │   ├── 11, 18, 22
    │   └── 31
    └── 38, 48, 67
        ├── 34, 37
        ├── 40
        ├── 63
        └── 83, 96

------------------------------

generatedTree.delete(32)
generatedTree.delete(40)

------------------------------

└── 34
    ├── 30
    │   ├── 11, 18, 22
    │   └── 31
    └── 48, 67
        ├── 37, 38
        ├── 63
        └── 83, 96


------------------------------

END - TEST 0


START - TEST 1
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(30);
generatedTree.insert2pass(61);
generatedTree.insert2pass(14);
generatedTree.insert2pass(41);
generatedTree.insert2pass(63);
generatedTree.insert2pass(94);
generatedTree.insert2pass(96);
generatedTree.insert2pass(72);
generatedTree.insert2pass(75);
generatedTree.insert2pass(84);
generatedTree.insert2pass(52);
generatedTree.insert2pass(59);
generatedTree.insert2pass(95);
------------------------------

└── 61
    ├── 37
    │   ├── 14, 30
    │   └── 41, 52, 59
    └── 72, 94
        ├── 63
        ├── 75, 84
        └── 95, 96

------------------------------

generatedTree.delete(63)
generatedTree.delete(84)

------------------------------

└── 61
    ├── 37
    │   ├── 14, 30
    │   └── 41, 52, 59
    └── 75, 95
        ├── 72
        ├── 94
        └── 96


------------------------------

END - TEST 1


START - TEST 2
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(77);
generatedTree.insert2pass(91);
generatedTree.insert2pass(45);
generatedTree.insert2pass(22);
generatedTree.insert2pass(63);
generatedTree.insert2pass(17);
generatedTree.insert2pass(78);
generatedTree.insert2pass(11);
generatedTree.insert2pass(62);
generatedTree.insert2pass(80);
generatedTree.insert2pass(99);
generatedTree.insert2pass(46);
------------------------------

└── 45, 77, 82
    ├── 11, 17, 22
    ├── 46, 62, 63
    ├── 78, 80
    └── 91, 99

------------------------------

generatedTree.delete(77)
generatedTree.delete(91)

------------------------------

└── 45, 63, 82
    ├── 11, 17, 22
    ├── 46, 62
    ├── 78, 80
    └── 99


------------------------------

END - TEST 2


START - TEST 3
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(69);
generatedTree.insert2pass(30);
generatedTree.insert2pass(47);
generatedTree.insert2pass(24);
generatedTree.insert2pass(70);
generatedTree.insert2pass(44);
generatedTree.insert2pass(12);
generatedTree.insert2pass(53);
generatedTree.insert2pass(84);
------------------------------

└── 30, 45, 69
    ├── 12, 24
    ├── 44
    ├── 47, 53
    └── 70, 84

------------------------------

generatedTree.delete(53)
generatedTree.delete(24)

------------------------------

└── 30, 45, 69
    ├── 12
    ├── 44
    ├── 47
    └── 70, 84


------------------------------

END - TEST 3


START - TEST 4
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(85);
generatedTree.insert2pass(35);
generatedTree.insert2pass(33);
generatedTree.insert2pass(77);
generatedTree.insert2pass(94);
generatedTree.insert2pass(60);
generatedTree.insert2pass(50);
generatedTree.insert2pass(71);
generatedTree.insert2pass(87);
generatedTree.insert2pass(36);
generatedTree.insert2pass(31);
generatedTree.insert2pass(54);
generatedTree.insert2pass(11);
generatedTree.insert2pass(59);
------------------------------

└── 60
    ├── 35, 50
    │   ├── 11, 31, 33
    │   ├── 36
    │   └── 54, 59
    └── 85
        ├── 71, 77
        └── 87, 89, 94

------------------------------

generatedTree.delete(50)
generatedTree.delete(87)
generatedTree.delete(36)

------------------------------

└── 60
    ├── 33, 54
    │   ├── 11, 31
    │   ├── 35
    │   └── 59
    └── 85
        ├── 71, 77
        └── 89, 94


------------------------------

END - TEST 4


START - TEST 5
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(42);
generatedTree.insert2pass(39);
generatedTree.insert2pass(13);
generatedTree.insert2pass(69);
generatedTree.insert2pass(12);
generatedTree.insert2pass(46);
generatedTree.insert2pass(82);
generatedTree.insert2pass(31);
generatedTree.insert2pass(18);
generatedTree.insert2pass(32);
generatedTree.insert2pass(16);
generatedTree.insert2pass(22);
generatedTree.insert2pass(27);
generatedTree.insert2pass(97);
generatedTree.insert2pass(71);
------------------------------

└── 39
    ├── 13, 18, 29
    │   ├── 12
    │   ├── 16
    │   ├── 22, 27
    │   └── 31, 32
    └── 46, 82
        ├── 42
        ├── 69, 71
        └── 97

------------------------------

generatedTree.delete(16)
generatedTree.delete(82)

------------------------------

└── 39
    ├── 13, 22, 29
    │   ├── 12
    │   ├── 18
    │   ├── 27
    │   └── 31, 32
    └── 46, 71
        ├── 42
        ├── 69
        └── 97


------------------------------

END - TEST 5


START - TEST 6
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(41);
generatedTree.insert2pass(74);
generatedTree.insert2pass(99);
generatedTree.insert2pass(45);
------------------------------

└── 41
    ├── 29
    └── 45, 74, 99

------------------------------

generatedTree.delete(41)

------------------------------

└── 45
    ├── 29
    └── 74, 99


------------------------------

END - TEST 6


START - TEST 7
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(72);
generatedTree.insert2pass(29);
generatedTree.insert2pass(78);
generatedTree.insert2pass(12);
generatedTree.insert2pass(33);
generatedTree.insert2pass(46);
generatedTree.insert2pass(83);
generatedTree.insert2pass(87);
generatedTree.insert2pass(97);
generatedTree.insert2pass(20);
generatedTree.insert2pass(42);
generatedTree.insert2pass(16);
generatedTree.insert2pass(49);
generatedTree.insert2pass(52);
generatedTree.insert2pass(81);
generatedTree.insert2pass(82);
generatedTree.insert2pass(25);
------------------------------

└── 72
    ├── 16, 29, 42
    │   ├── 12
    │   ├── 20, 25
    │   ├── 33
    │   └── 46, 49, 52
    └── 83
        ├── 78, 81, 82
        └── 87, 97

------------------------------

generatedTree.delete(29)
generatedTree.delete(49)

------------------------------

└── 72
    ├── 16, 25, 42
    │   ├── 12
    │   ├── 20
    │   ├── 33
    │   └── 46, 52
    └── 83
        ├── 78, 81, 82
        └── 87, 97


------------------------------

END - TEST 7


START - TEST 8
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(82);
generatedTree.insert2pass(13);
generatedTree.insert2pass(59);
generatedTree.insert2pass(70);
generatedTree.insert2pass(89);
generatedTree.insert2pass(76);
generatedTree.insert2pass(83);
generatedTree.insert2pass(20);
------------------------------

└── 15, 70, 82
    ├── 13
    ├── 20, 59
    ├── 76
    └── 83, 89

------------------------------

generatedTree.delete(83)
generatedTree.delete(70)
generatedTree.delete(15)

------------------------------

└── 59, 82
    ├── 13, 20
    ├── 76
    └── 89


------------------------------

END - TEST 8


START - TEST 9
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(68);
generatedTree.insert2pass(53);
generatedTree.insert2pass(34);
generatedTree.insert2pass(77);
------------------------------

└── 68
    ├── 34, 53
    └── 75, 77

------------------------------

generatedTree.delete(68)

------------------------------

└── 53
    ├── 34
    └── 75, 77


------------------------------

END - TEST 9


START - TEST 10
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(98);
generatedTree.insert2pass(87);
generatedTree.insert2pass(59);
generatedTree.insert2pass(11);
generatedTree.insert2pass(15);
------------------------------

└── 59, 87
    ├── 11, 15
    ├── 64
    └── 98

------------------------------

generatedTree.delete(87)
generatedTree.delete(15)
generatedTree.delete(98)

------------------------------

└── 59
    ├── 11
    └── 64


------------------------------

END - TEST 10


START - TEST 11
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(28);
generatedTree.insert2pass(88);
generatedTree.insert2pass(73);
generatedTree.insert2pass(54);
generatedTree.insert2pass(30);
generatedTree.insert2pass(31);
generatedTree.insert2pass(57);
generatedTree.insert2pass(37);
generatedTree.insert2pass(75);
generatedTree.insert2pass(81);
generatedTree.insert2pass(23);
generatedTree.insert2pass(55);
generatedTree.insert2pass(33);
generatedTree.insert2pass(82);
generatedTree.insert2pass(96);
------------------------------

└── 54
    ├── 30
    │   ├── 23, 28
    │   └── 31, 33, 37
    └── 73, 88
        ├── 55, 57
        ├── 75, 81, 82
        └── 95, 96

------------------------------

generatedTree.delete(75)
generatedTree.delete(28)

------------------------------

└── 73
    ├── 30, 54
    │   ├── 23
    │   ├── 31, 33, 37
    │   └── 55, 57
    └── 88
        ├── 81, 82
        └── 95, 96


------------------------------

END - TEST 11


START - TEST 12
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(21);
generatedTree.insert2pass(93);
generatedTree.insert2pass(51);
generatedTree.insert2pass(43);
generatedTree.insert2pass(42);
generatedTree.insert2pass(20);
generatedTree.insert2pass(36);
generatedTree.insert2pass(99);
generatedTree.insert2pass(32);
generatedTree.insert2pass(74);
generatedTree.insert2pass(38);
generatedTree.insert2pass(69);
generatedTree.insert2pass(90);
generatedTree.insert2pass(45);
generatedTree.insert2pass(89);
------------------------------

└── 42
    ├── 21
    │   ├── 20
    │   └── 32, 36, 38
    └── 47, 69, 93
        ├── 43, 45
        ├── 51
        ├── 74, 89, 90
        └── 99

------------------------------

generatedTree.delete(36)
generatedTree.delete(51)

------------------------------

└── 47
    ├── 21, 42
    │   ├── 20
    │   ├── 32, 38
    │   └── 43, 45
    └── 74, 93
        ├── 69
        ├── 89, 90
        └── 99


------------------------------

END - TEST 12


START - TEST 13
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(33);
generatedTree.insert2pass(95);
generatedTree.insert2pass(45);
generatedTree.insert2pass(63);
generatedTree.insert2pass(64);
------------------------------

└── 45, 95
    ├── 33
    ├── 63, 64
    └── 98

------------------------------

generatedTree.delete(64)

------------------------------

└── 45, 95
    ├── 33
    ├── 63
    └── 98


------------------------------

END - TEST 13


START - TEST 14
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(25);
generatedTree.insert2pass(81);
generatedTree.insert2pass(79);
generatedTree.insert2pass(26);
generatedTree.insert2pass(42);
generatedTree.insert2pass(28);
generatedTree.insert2pass(43);
generatedTree.insert2pass(90);
generatedTree.insert2pass(69);
generatedTree.insert2pass(45);
generatedTree.insert2pass(31);
generatedTree.insert2pass(85);
generatedTree.insert2pass(57);
generatedTree.insert2pass(97);
generatedTree.insert2pass(47);
generatedTree.insert2pass(65);
generatedTree.insert2pass(33);
generatedTree.insert2pass(37);
------------------------------

└── 28, 79
    ├── 25
    │   ├── 15
    │   └── 26
    ├── 33, 43, 57
    │   ├── 31
    │   ├── 37, 42
    │   ├── 45, 47
    │   └── 65, 69
    └── 85
        ├── 81
        └── 90, 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(43)

------------------------------

└── 28, 57
    ├── 25
    │   ├── 15
    │   └── 26
    ├── 33, 42
    │   ├── 31
    │   ├── 37
    │   └── 45, 47
    └── 79, 85
        ├── 65, 69
        ├── 81
        └── 90


------------------------------

END - TEST 14


START - TEST 15
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(15);
generatedTree.insert2pass(49);
generatedTree.insert2pass(24);
generatedTree.insert2pass(93);
generatedTree.insert2pass(83);
generatedTree.insert2pass(75);
generatedTree.insert2pass(61);
generatedTree.insert2pass(91);
generatedTree.insert2pass(62);
generatedTree.insert2pass(37);
generatedTree.insert2pass(34);
generatedTree.insert2pass(52);
generatedTree.insert2pass(16);
generatedTree.insert2pass(60);
generatedTree.insert2pass(20);
generatedTree.insert2pass(38);
generatedTree.insert2pass(89);
generatedTree.insert2pass(45);
------------------------------

└── 28, 61
    ├── 16
    │   ├── 15
    │   └── 20, 24
    ├── 37, 52
    │   ├── 34
    │   ├── 38, 45, 49
    │   └── 60
    └── 83
        ├── 62, 75
        └── 89, 91, 93

------------------------------

generatedTree.delete(52)
generatedTree.delete(49)
generatedTree.delete(20)

------------------------------

└── 37, 61
    ├── 16, 28
    │   ├── 15
    │   ├── 24
    │   └── 34
    ├── 45
    │   ├── 38
    │   └── 60
    └── 83
        ├── 62, 75
        └── 89, 91, 93


------------------------------

END - TEST 15


START - TEST 16
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(16);
generatedTree.insert2pass(30);
generatedTree.insert2pass(92);
generatedTree.insert2pass(60);
generatedTree.insert2pass(81);
generatedTree.insert2pass(77);
------------------------------

└── 30, 60
    ├── 16
    ├── 42
    └── 77, 81, 92

------------------------------

generatedTree.delete(16)

------------------------------

└── 60
    ├── 30, 42
    └── 77, 81, 92


------------------------------

END - TEST 16


START - TEST 17
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(22);
generatedTree.insert2pass(77);
generatedTree.insert2pass(57);
generatedTree.insert2pass(45);
generatedTree.insert2pass(52);
generatedTree.insert2pass(75);
generatedTree.insert2pass(40);
generatedTree.insert2pass(27);
generatedTree.insert2pass(76);
generatedTree.insert2pass(50);
generatedTree.insert2pass(51);
------------------------------

└── 44, 50, 57
    ├── 22, 27, 40
    ├── 45
    ├── 51, 52
    └── 75, 76, 77

------------------------------

generatedTree.delete(75)
generatedTree.delete(52)

------------------------------

└── 44, 50, 57
    ├── 22, 27, 40
    ├── 45
    ├── 51
    └── 76, 77


------------------------------

END - TEST 17


START - TEST 18
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(96);
generatedTree.insert2pass(34);
generatedTree.insert2pass(93);
generatedTree.insert2pass(84);
generatedTree.insert2pass(43);
generatedTree.insert2pass(37);
generatedTree.insert2pass(20);
generatedTree.insert2pass(29);
generatedTree.insert2pass(52);
generatedTree.insert2pass(50);
generatedTree.insert2pass(61);
generatedTree.insert2pass(82);
generatedTree.insert2pass(95);
generatedTree.insert2pass(88);
generatedTree.insert2pass(97);
generatedTree.insert2pass(40);
------------------------------

└── 43
    ├── 34
    │   ├── 20, 29
    │   └── 37, 40
    └── 52, 86, 95
        ├── 50
        ├── 61, 82, 84
        ├── 88, 93
        └── 96, 97

------------------------------

generatedTree.delete(40)

------------------------------

└── 52
    ├── 34, 43
    │   ├── 20, 29
    │   ├── 37
    │   └── 50
    └── 86, 95
        ├── 61, 82, 84
        ├── 88, 93
        └── 96, 97


------------------------------

END - TEST 18


START - TEST 19
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(84);
generatedTree.insert2pass(41);
generatedTree.insert2pass(32);
generatedTree.insert2pass(77);
generatedTree.insert2pass(33);
generatedTree.insert2pass(68);
generatedTree.insert2pass(82);
generatedTree.insert2pass(97);
generatedTree.insert2pass(20);
generatedTree.insert2pass(66);
generatedTree.insert2pass(49);
generatedTree.insert2pass(59);
generatedTree.insert2pass(37);
generatedTree.insert2pass(13);
------------------------------

└── 41
    ├── 32
    │   ├── 13, 17, 20
    │   └── 33, 37
    └── 66, 77
        ├── 49, 59
        ├── 68
        └── 82, 84, 97

------------------------------

generatedTree.delete(37)
generatedTree.delete(68)
generatedTree.delete(20)

------------------------------

└── 59
    ├── 32, 41
    │   ├── 13, 17
    │   ├── 33
    │   └── 49
    └── 77
        ├── 66
        └── 82, 84, 97


------------------------------

END - TEST 19


START - TEST 20
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(78);
generatedTree.insert2pass(30);
generatedTree.insert2pass(85);
generatedTree.insert2pass(92);
generatedTree.insert2pass(57);
generatedTree.insert2pass(11);
generatedTree.insert2pass(64);
generatedTree.insert2pass(12);
generatedTree.insert2pass(49);
generatedTree.insert2pass(40);
generatedTree.insert2pass(36);
generatedTree.insert2pass(21);
generatedTree.insert2pass(50);
generatedTree.insert2pass(82);
generatedTree.insert2pass(34);
generatedTree.insert2pass(79);
generatedTree.insert2pass(86);
generatedTree.insert2pass(68);
generatedTree.insert2pass(17);
------------------------------

└── 57
    ├── 12, 30, 40
    │   ├── 11
    │   ├── 17, 21
    │   ├── 34, 36
    │   └── 49, 50
    └── 78, 85
        ├── 64, 68
        ├── 79, 82
        └── 86, 92

------------------------------

generatedTree.delete(12)
generatedTree.delete(64)
generatedTree.delete(21)

------------------------------

└── 57
    ├── 17, 34, 40
    │   ├── 11
    │   ├── 30
    │   ├── 36
    │   └── 49, 50
    └── 78, 85
        ├── 68
        ├── 79, 82
        └── 86, 92


------------------------------

END - TEST 20


START - TEST 21
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(53);
generatedTree.insert2pass(73);
generatedTree.insert2pass(97);
generatedTree.insert2pass(38);
generatedTree.insert2pass(76);
generatedTree.insert2pass(27);
generatedTree.insert2pass(37);
generatedTree.insert2pass(39);
generatedTree.insert2pass(35);
generatedTree.insert2pass(92);
generatedTree.insert2pass(64);
generatedTree.insert2pass(29);
------------------------------

└── 35, 38, 73
    ├── 27, 29
    ├── 37
    ├── 39, 53, 64
    └── 76, 92, 97

------------------------------

generatedTree.delete(38)
generatedTree.delete(39)
generatedTree.delete(73)

------------------------------

└── 35, 53, 76
    ├── 27, 29
    ├── 37
    ├── 64
    └── 92, 97


------------------------------

END - TEST 21


START - TEST 22
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(88);
generatedTree.insert2pass(14);
generatedTree.insert2pass(67);
generatedTree.insert2pass(84);
generatedTree.insert2pass(74);
generatedTree.insert2pass(98);
generatedTree.insert2pass(65);
generatedTree.insert2pass(19);
generatedTree.insert2pass(29);
generatedTree.insert2pass(41);
generatedTree.insert2pass(92);
generatedTree.insert2pass(31);
generatedTree.insert2pass(95);
generatedTree.insert2pass(96);
generatedTree.insert2pass(51);
generatedTree.insert2pass(32);
generatedTree.insert2pass(18);
------------------------------

└── 67
    ├── 19, 41
    │   ├── 14, 18
    │   ├── 29, 31, 32
    │   └── 51, 65
    └── 86, 92
        ├── 74, 84
        ├── 88
        └── 95, 96, 98

------------------------------

generatedTree.delete(74)

------------------------------

└── 67
    ├── 19, 41
    │   ├── 14, 18
    │   ├── 29, 31, 32
    │   └── 51, 65
    └── 86, 92
        ├── 84
        ├── 88
        └── 95, 96, 98


------------------------------

END - TEST 22


START - TEST 23
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(58);
generatedTree.insert2pass(70);
generatedTree.insert2pass(93);
generatedTree.insert2pass(76);
generatedTree.insert2pass(64);
generatedTree.insert2pass(29);
generatedTree.insert2pass(43);
------------------------------

└── 58, 76
    ├── 29, 43, 44
    ├── 64, 70
    └── 93

------------------------------

generatedTree.delete(44)

------------------------------

└── 58, 76
    ├── 29, 43
    ├── 64, 70
    └── 93


------------------------------

END - TEST 23


START - TEST 24
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(75);
generatedTree.insert2pass(19);
generatedTree.insert2pass(40);
generatedTree.insert2pass(58);
generatedTree.insert2pass(82);
generatedTree.insert2pass(50);
generatedTree.insert2pass(95);
generatedTree.insert2pass(96);
generatedTree.insert2pass(60);
generatedTree.insert2pass(91);
generatedTree.insert2pass(24);
generatedTree.insert2pass(44);
generatedTree.insert2pass(23);
generatedTree.insert2pass(38);
generatedTree.insert2pass(70);
generatedTree.insert2pass(94);
generatedTree.insert2pass(25);
------------------------------

└── 75
    ├── 23, 40, 58
    │   ├── 19
    │   ├── 24, 25, 38
    │   ├── 44, 50
    │   └── 60, 70
    └── 95
        ├── 82, 91, 94
        └── 96

------------------------------

generatedTree.delete(38)
generatedTree.delete(96)

------------------------------

└── 58
    ├── 23, 40
    │   ├── 19
    │   ├── 24, 25
    │   └── 44, 50
    └── 75, 94
        ├── 60, 70
        ├── 82, 91
        └── 95


------------------------------

END - TEST 24


START - TEST 25
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(72);
generatedTree.insert2pass(25);
generatedTree.insert2pass(33);
generatedTree.insert2pass(44);
generatedTree.insert2pass(86);
generatedTree.insert2pass(11);
generatedTree.insert2pass(49);
generatedTree.insert2pass(35);
generatedTree.insert2pass(93);
------------------------------

└── 33, 72
    ├── 11, 25
    ├── 35, 44, 49
    └── 86, 93, 94

------------------------------

generatedTree.delete(35)
generatedTree.delete(25)

------------------------------

└── 33, 72
    ├── 11
    ├── 44, 49
    └── 86, 93, 94


------------------------------

END - TEST 25


START - TEST 26
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(76);
generatedTree.insert2pass(34);
generatedTree.insert2pass(14);
generatedTree.insert2pass(41);
generatedTree.insert2pass(80);
generatedTree.insert2pass(43);
generatedTree.insert2pass(15);
generatedTree.insert2pass(67);
generatedTree.insert2pass(78);
generatedTree.insert2pass(16);
generatedTree.insert2pass(92);
generatedTree.insert2pass(48);
generatedTree.insert2pass(49);
generatedTree.insert2pass(40);
generatedTree.insert2pass(22);
generatedTree.insert2pass(31);
generatedTree.insert2pass(70);
generatedTree.insert2pass(33);
generatedTree.insert2pass(47);
------------------------------

└── 43
    ├── 15, 22, 34
    │   ├── 14
    │   ├── 16
    │   ├── 31, 33
    │   └── 40, 41
    └── 49, 76
        ├── 47, 48
        ├── 67, 70
        └── 78, 80, 92

------------------------------

generatedTree.delete(80)
generatedTree.delete(47)

------------------------------

└── 43
    ├── 15, 22, 34
    │   ├── 14
    │   ├── 16
    │   ├── 31, 33
    │   └── 40, 41
    └── 49, 76
        ├── 48
        ├── 67, 70
        └── 78, 92


------------------------------

END - TEST 26


START - TEST 27
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(16);
generatedTree.insert2pass(90);
generatedTree.insert2pass(40);
generatedTree.insert2pass(45);
generatedTree.insert2pass(50);
generatedTree.insert2pass(98);
generatedTree.insert2pass(83);
generatedTree.insert2pass(15);
generatedTree.insert2pass(75);
generatedTree.insert2pass(28);
generatedTree.insert2pass(55);
generatedTree.insert2pass(85);
generatedTree.insert2pass(65);
generatedTree.insert2pass(32);
generatedTree.insert2pass(62);
generatedTree.insert2pass(80);
------------------------------

└── 61
    ├── 16, 40
    │   ├── 15
    │   ├── 28, 32
    │   └── 45, 50, 55
    └── 65, 83, 90
        ├── 62
        ├── 75, 80
        ├── 85
        └── 98

------------------------------

generatedTree.delete(90)
generatedTree.delete(83)
generatedTree.delete(28)

------------------------------

└── 61
    ├── 16, 40
    │   ├── 15
    │   ├── 32
    │   └── 45, 50, 55
    └── 65, 80
        ├── 62
        ├── 75
        └── 85, 98


------------------------------

END - TEST 27


START - TEST 28
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(14);
generatedTree.insert2pass(39);
generatedTree.insert2pass(52);
generatedTree.insert2pass(20);
generatedTree.insert2pass(98);
generatedTree.insert2pass(26);
------------------------------

└── 39
    ├── 14, 20, 26
    └── 52, 98

------------------------------

generatedTree.delete(26)
generatedTree.delete(39)

------------------------------

└── 20
    ├── 14
    └── 52, 98


------------------------------

END - TEST 28


START - TEST 29
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(50);
generatedTree.insert2pass(74);
generatedTree.insert2pass(84);
generatedTree.insert2pass(40);
generatedTree.insert2pass(11);
generatedTree.insert2pass(34);
generatedTree.insert2pass(97);
generatedTree.insert2pass(95);
generatedTree.insert2pass(68);
generatedTree.insert2pass(44);
------------------------------

└── 40, 74
    ├── 11, 34
    ├── 44, 50, 68
    └── 84, 95, 97

------------------------------

generatedTree.delete(74)
generatedTree.delete(84)

------------------------------

└── 40, 68
    ├── 11, 34
    ├── 44, 50
    └── 95, 97


------------------------------

END - TEST 29


START - TEST 30
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(94);
generatedTree.insert2pass(83);
generatedTree.insert2pass(82);
generatedTree.insert2pass(77);
generatedTree.insert2pass(75);
generatedTree.insert2pass(74);
generatedTree.insert2pass(20);
generatedTree.insert2pass(66);
generatedTree.insert2pass(34);
------------------------------

└── 77
    ├── 42, 74
    │   ├── 20, 34
    │   ├── 66
    │   └── 75
    └── 83
        ├── 82
        └── 94

------------------------------

generatedTree.delete(94)
generatedTree.delete(75)

------------------------------

└── 42, 74, 82
    ├── 20, 34
    ├── 66
    ├── 77
    └── 83


------------------------------

END - TEST 30


START - TEST 31
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(12);
generatedTree.insert2pass(82);
generatedTree.insert2pass(69);
generatedTree.insert2pass(15);
generatedTree.insert2pass(34);
generatedTree.insert2pass(16);
generatedTree.insert2pass(58);
generatedTree.insert2pass(81);
generatedTree.insert2pass(18);
generatedTree.insert2pass(11);
generatedTree.insert2pass(27);
generatedTree.insert2pass(70);
generatedTree.insert2pass(53);
generatedTree.insert2pass(23);
generatedTree.insert2pass(51);
generatedTree.insert2pass(56);
generatedTree.insert2pass(30);
generatedTree.insert2pass(44);
------------------------------

└── 34
    ├── 15, 18
    │   ├── 11, 12
    │   ├── 16
    │   └── 23, 27, 30
    └── 53, 69
        ├── 44, 51
        ├── 56, 58
        └── 70, 81, 82

------------------------------

generatedTree.delete(58)
generatedTree.delete(53)

------------------------------

└── 34
    ├── 15, 18
    │   ├── 11, 12
    │   ├── 16
    │   └── 23, 27, 30
    └── 51, 69
        ├── 44
        ├── 56
        └── 70, 81, 82


------------------------------

END - TEST 31


START - TEST 32
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(19);
generatedTree.insert2pass(36);
generatedTree.insert2pass(65);
generatedTree.insert2pass(22);
generatedTree.insert2pass(44);
generatedTree.insert2pass(49);
generatedTree.insert2pass(42);
generatedTree.insert2pass(60);
generatedTree.insert2pass(35);
generatedTree.insert2pass(52);
generatedTree.insert2pass(46);
generatedTree.insert2pass(62);
generatedTree.insert2pass(29);
------------------------------

└── 44
    ├── 22, 36
    │   ├── 19
    │   ├── 29, 35
    │   └── 42
    └── 52, 65
        ├── 46, 49
        ├── 60, 62
        └── 83

------------------------------

generatedTree.delete(83)

------------------------------

└── 44
    ├── 22, 36
    │   ├── 19
    │   ├── 29, 35
    │   └── 42
    └── 52, 62
        ├── 46, 49
        ├── 60
        └── 65


------------------------------

END - TEST 32


START - TEST 33
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(54);
generatedTree.insert2pass(61);
generatedTree.insert2pass(29);
generatedTree.insert2pass(55);
generatedTree.insert2pass(32);
generatedTree.insert2pass(48);
generatedTree.insert2pass(49);
generatedTree.insert2pass(88);
generatedTree.insert2pass(51);
generatedTree.insert2pass(25);
------------------------------

└── 32, 54, 61
    ├── 25, 29
    ├── 48, 49, 51
    ├── 55
    └── 74, 88

------------------------------

generatedTree.delete(54)
generatedTree.delete(74)

------------------------------

└── 32, 51, 61
    ├── 25, 29
    ├── 48, 49
    ├── 55
    └── 88


------------------------------

END - TEST 33


START - TEST 34
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(52);
generatedTree.insert2pass(90);
generatedTree.insert2pass(46);
generatedTree.insert2pass(15);
generatedTree.insert2pass(20);
generatedTree.insert2pass(24);
generatedTree.insert2pass(47);
generatedTree.insert2pass(37);
generatedTree.insert2pass(54);
generatedTree.insert2pass(34);
generatedTree.insert2pass(94);
generatedTree.insert2pass(44);
generatedTree.insert2pass(69);
generatedTree.insert2pass(27);
generatedTree.insert2pass(64);
generatedTree.insert2pass(89);
generatedTree.insert2pass(28);
generatedTree.insert2pass(45);
------------------------------

└── 46
    ├── 20, 34
    │   ├── 15
    │   ├── 24, 27, 28
    │   └── 37, 44, 45
    └── 52, 64, 90
        ├── 47
        ├── 54
        ├── 69, 89
        └── 94

------------------------------

generatedTree.delete(24)
generatedTree.delete(52)

------------------------------

└── 46
    ├── 20, 34
    │   ├── 15
    │   ├── 27, 28
    │   └── 37, 44, 45
    └── 64, 90
        ├── 47, 54
        ├── 69, 89
        └── 94


------------------------------

END - TEST 34


START - TEST 35
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(25);
generatedTree.insert2pass(42);
generatedTree.insert2pass(53);
generatedTree.insert2pass(95);
generatedTree.insert2pass(49);
------------------------------

└── 42
    ├── 25
    └── 49, 53, 95

------------------------------

generatedTree.delete(49)
generatedTree.delete(95)
generatedTree.delete(53)

------------------------------

└── 25, 42


------------------------------

END - TEST 35


START - TEST 36
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(62);
generatedTree.insert2pass(39);
generatedTree.insert2pass(37);
generatedTree.insert2pass(59);
generatedTree.insert2pass(76);
generatedTree.insert2pass(22);
generatedTree.insert2pass(31);
generatedTree.insert2pass(66);
generatedTree.insert2pass(19);
generatedTree.insert2pass(85);
generatedTree.insert2pass(24);
generatedTree.insert2pass(83);
generatedTree.insert2pass(70);
generatedTree.insert2pass(41);
generatedTree.insert2pass(53);
------------------------------

└── 46
    ├── 22, 37
    │   ├── 19
    │   ├── 24, 31
    │   └── 39, 41
    └── 62, 76
        ├── 53, 59
        ├── 66, 70
        └── 83, 85

------------------------------

generatedTree.delete(46)
generatedTree.delete(53)
generatedTree.delete(66)

------------------------------

└── 41
    ├── 22, 37
    │   ├── 19
    │   ├── 24, 31
    │   └── 39
    └── 62, 76
        ├── 59
        ├── 70
        └── 83, 85


------------------------------

END - TEST 36


START - TEST 37
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(69);
generatedTree.insert2pass(98);
generatedTree.insert2pass(67);
generatedTree.insert2pass(76);
generatedTree.insert2pass(72);
generatedTree.insert2pass(41);
generatedTree.insert2pass(78);
generatedTree.insert2pass(75);
generatedTree.insert2pass(24);
------------------------------

└── 45, 69, 76
    ├── 24, 41
    ├── 67
    ├── 72, 75
    └── 78, 98

------------------------------

generatedTree.delete(98)

------------------------------

└── 45, 69, 76
    ├── 24, 41
    ├── 67
    ├── 72, 75
    └── 78


------------------------------

END - TEST 37


START - TEST 38
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(54);
generatedTree.insert2pass(60);
generatedTree.insert2pass(97);
generatedTree.insert2pass(82);
generatedTree.insert2pass(56);
generatedTree.insert2pass(91);
generatedTree.insert2pass(81);
generatedTree.insert2pass(70);
generatedTree.insert2pass(28);
generatedTree.insert2pass(61);
generatedTree.insert2pass(85);
generatedTree.insert2pass(93);
------------------------------

└── 73
    ├── 60
    │   ├── 28, 54, 56
    │   └── 61, 70
    └── 82, 91
        ├── 81
        ├── 85
        └── 93, 97

------------------------------

generatedTree.delete(91)
generatedTree.delete(60)
generatedTree.delete(54)

------------------------------

└── 82
    ├── 56, 73
    │   ├── 28
    │   ├── 61, 70
    │   └── 81
    └── 93
        ├── 85
        └── 97


------------------------------

END - TEST 38


START - TEST 39
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(37);
generatedTree.insert2pass(53);
generatedTree.insert2pass(18);
generatedTree.insert2pass(28);
generatedTree.insert2pass(98);
generatedTree.insert2pass(21);
generatedTree.insert2pass(91);
generatedTree.insert2pass(95);
generatedTree.insert2pass(23);
generatedTree.insert2pass(71);
generatedTree.insert2pass(92);
generatedTree.insert2pass(78);
generatedTree.insert2pass(68);
generatedTree.insert2pass(48);
generatedTree.insert2pass(39);
generatedTree.insert2pass(46);
generatedTree.insert2pass(83);
generatedTree.insert2pass(29);
------------------------------

└── 53
    ├── 28, 39
    │   ├── 18, 21, 23
    │   ├── 29, 37
    │   └── 46, 48
    └── 71, 91
        ├── 68, 70
        ├── 78, 83
        └── 92, 95, 98

------------------------------

generatedTree.delete(48)

------------------------------

└── 53
    ├── 28, 39
    │   ├── 18, 21, 23
    │   ├── 29, 37
    │   └── 46
    └── 71, 91
        ├── 68, 70
        ├── 78, 83
        └── 92, 95, 98


------------------------------

END - TEST 39


START - TEST 40
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(42);
generatedTree.insert2pass(98);
generatedTree.insert2pass(99);
generatedTree.insert2pass(52);
generatedTree.insert2pass(49);
generatedTree.insert2pass(47);
generatedTree.insert2pass(85);
generatedTree.insert2pass(18);
generatedTree.insert2pass(54);
generatedTree.insert2pass(28);
generatedTree.insert2pass(25);
generatedTree.insert2pass(78);
generatedTree.insert2pass(74);
generatedTree.insert2pass(65);
generatedTree.insert2pass(19);
generatedTree.insert2pass(94);
generatedTree.insert2pass(44);
generatedTree.insert2pass(58);
generatedTree.insert2pass(80);
generatedTree.insert2pass(86);
generatedTree.insert2pass(60);
------------------------------

└── 49, 78
    ├── 25, 42
    │   ├── 18, 19
    │   ├── 28
    │   └── 44, 47
    ├── 54, 65
    │   ├── 52
    │   ├── 58, 60
    │   └── 74
    └── 85, 98
        ├── 80
        ├── 86, 94
        └── 99

------------------------------

generatedTree.delete(80)

------------------------------

└── 49, 78
    ├── 25, 42
    │   ├── 18, 19
    │   ├── 28
    │   └── 44, 47
    ├── 54, 65
    │   ├── 52
    │   ├── 58, 60
    │   └── 74
    └── 86, 98
        ├── 85
        ├── 94
        └── 99


------------------------------

END - TEST 40


START - TEST 41
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(62);
generatedTree.insert2pass(31);
generatedTree.insert2pass(36);
generatedTree.insert2pass(28);
------------------------------

└── 32
    ├── 28, 31
    └── 36, 62

------------------------------

generatedTree.delete(62)

------------------------------

└── 32
    ├── 28, 31
    └── 36


------------------------------

END - TEST 41


START - TEST 42
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(74);
generatedTree.insert2pass(42);
generatedTree.insert2pass(87);
generatedTree.insert2pass(48);
generatedTree.insert2pass(28);
generatedTree.insert2pass(64);
generatedTree.insert2pass(65);
generatedTree.insert2pass(37);
generatedTree.insert2pass(79);
generatedTree.insert2pass(93);
generatedTree.insert2pass(41);
generatedTree.insert2pass(15);
------------------------------

└── 32, 42, 74
    ├── 15, 28
    ├── 37, 41
    ├── 48, 64, 65
    └── 79, 87, 93

------------------------------

generatedTree.delete(65)

------------------------------

└── 32, 42, 74
    ├── 15, 28
    ├── 37, 41
    ├── 48, 64
    └── 79, 87, 93


------------------------------

END - TEST 42


START - TEST 43
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(85);
generatedTree.insert2pass(45);
generatedTree.insert2pass(99);
generatedTree.insert2pass(16);
generatedTree.insert2pass(15);
generatedTree.insert2pass(30);
generatedTree.insert2pass(74);
generatedTree.insert2pass(91);
generatedTree.insert2pass(18);
------------------------------

└── 16, 45, 85
    ├── 15
    ├── 18, 20, 30
    ├── 74
    └── 91, 99

------------------------------

generatedTree.delete(30)
generatedTree.delete(18)

------------------------------

└── 16, 45, 85
    ├── 15
    ├── 20
    ├── 74
    └── 91, 99


------------------------------

END - TEST 43


START - TEST 44
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(31);
generatedTree.insert2pass(73);
generatedTree.insert2pass(64);
generatedTree.insert2pass(58);
generatedTree.insert2pass(47);
generatedTree.insert2pass(42);
generatedTree.insert2pass(39);
generatedTree.insert2pass(30);
generatedTree.insert2pass(36);
generatedTree.insert2pass(20);
generatedTree.insert2pass(16);
generatedTree.insert2pass(38);
generatedTree.insert2pass(88);
generatedTree.insert2pass(51);
generatedTree.insert2pass(45);
generatedTree.insert2pass(48);
------------------------------

└── 47
    ├── 31, 39
    │   ├── 16, 20, 30
    │   ├── 36, 38
    │   └── 42, 45
    └── 64
        ├── 48, 51, 58
        └── 73, 88

------------------------------

generatedTree.delete(36)
generatedTree.delete(48)

------------------------------

└── 39
    ├── 31
    │   ├── 16, 20, 30
    │   └── 38
    └── 47, 64
        ├── 42, 45
        ├── 51, 58
        └── 73, 88


------------------------------

END - TEST 44


START - TEST 45
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(50);
generatedTree.insert2pass(14);
generatedTree.insert2pass(60);
generatedTree.insert2pass(53);
generatedTree.insert2pass(17);
generatedTree.insert2pass(20);
generatedTree.insert2pass(19);
generatedTree.insert2pass(82);
generatedTree.insert2pass(70);
generatedTree.insert2pass(35);
generatedTree.insert2pass(13);
generatedTree.insert2pass(77);
generatedTree.insert2pass(29);
generatedTree.insert2pass(22);
generatedTree.insert2pass(15);
generatedTree.insert2pass(63);
generatedTree.insert2pass(67);
generatedTree.insert2pass(88);
generatedTree.insert2pass(97);
------------------------------

└── 50
    ├── 17, 20
    │   ├── 13, 14, 15
    │   ├── 19
    │   └── 22, 29, 35
    └── 60, 70, 82
        ├── 53
        ├── 63, 67
        ├── 77
        └── 87, 88, 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(82)
generatedTree.delete(13)

------------------------------

└── 50
    ├── 17, 20
    │   ├── 14, 15
    │   ├── 19
    │   └── 22, 29, 35
    └── 60, 70, 87
        ├── 53
        ├── 63, 67
        ├── 77
        └── 88


------------------------------

END - TEST 45


START - TEST 46
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(91);
generatedTree.insert2pass(82);
generatedTree.insert2pass(27);
generatedTree.insert2pass(95);
generatedTree.insert2pass(68);
generatedTree.insert2pass(16);
generatedTree.insert2pass(19);
generatedTree.insert2pass(49);
generatedTree.insert2pass(24);
generatedTree.insert2pass(85);
generatedTree.insert2pass(72);
generatedTree.insert2pass(29);
generatedTree.insert2pass(96);
generatedTree.insert2pass(99);
generatedTree.insert2pass(45);
generatedTree.insert2pass(22);
generatedTree.insert2pass(64);
generatedTree.insert2pass(74);
generatedTree.insert2pass(61);
generatedTree.insert2pass(15);
------------------------------

└── 44, 82
    ├── 19, 27
    │   ├── 15, 16
    │   ├── 22, 24
    │   └── 29
    ├── 49, 68
    │   ├── 45
    │   ├── 61, 64
    │   └── 72, 74
    └── 91
        ├── 85
        └── 95, 96, 99

------------------------------

generatedTree.delete(16)

------------------------------

└── 44, 82
    ├── 19, 27
    │   ├── 15
    │   ├── 22, 24
    │   └── 29
    ├── 49, 68
    │   ├── 45
    │   ├── 61, 64
    │   └── 72, 74
    └── 91
        ├── 85
        └── 95, 96, 99


------------------------------

END - TEST 46


START - TEST 47
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(82);
generatedTree.insert2pass(17);
generatedTree.insert2pass(55);
generatedTree.insert2pass(62);
------------------------------

└── 17
    ├── 13
    └── 55, 62, 82

------------------------------

generatedTree.delete(17)
generatedTree.delete(82)

------------------------------

└── 55
    ├── 13
    └── 62


------------------------------

END - TEST 47


START - TEST 48
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(76);
generatedTree.insert2pass(49);
generatedTree.insert2pass(35);
generatedTree.insert2pass(25);
generatedTree.insert2pass(42);
generatedTree.insert2pass(83);
generatedTree.insert2pass(82);
generatedTree.insert2pass(64);
generatedTree.insert2pass(26);
generatedTree.insert2pass(32);
generatedTree.insert2pass(60);
generatedTree.insert2pass(93);
generatedTree.insert2pass(80);
generatedTree.insert2pass(12);
generatedTree.insert2pass(11);
generatedTree.insert2pass(22);
generatedTree.insert2pass(28);
------------------------------

└── 49
    ├── 12, 26, 35
    │   ├── 11
    │   ├── 22, 25
    │   ├── 28, 32
    │   └── 42
    └── 64, 82
        ├── 60
        ├── 76, 80
        └── 83, 93

------------------------------

generatedTree.delete(83)
generatedTree.delete(42)
generatedTree.delete(60)

------------------------------

└── 49
    ├── 12, 26, 32
    │   ├── 11
    │   ├── 22, 25
    │   ├── 28
    │   └── 35
    └── 76, 82
        ├── 64
        ├── 80
        └── 93


------------------------------

END - TEST 48


START - TEST 49
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(12);
generatedTree.insert2pass(64);
generatedTree.insert2pass(93);
generatedTree.insert2pass(13);
generatedTree.insert2pass(79);
generatedTree.insert2pass(21);
------------------------------

└── 22
    ├── 12, 13, 21
    └── 64, 79, 93

------------------------------

generatedTree.delete(12)
generatedTree.delete(93)

------------------------------

└── 22
    ├── 13, 21
    └── 64, 79


------------------------------

END - TEST 49


START - TEST 50
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(84);
generatedTree.insert2pass(69);
generatedTree.insert2pass(86);
generatedTree.insert2pass(54);
generatedTree.insert2pass(15);
generatedTree.insert2pass(38);
generatedTree.insert2pass(58);
generatedTree.insert2pass(17);
generatedTree.insert2pass(59);
generatedTree.insert2pass(40);
generatedTree.insert2pass(80);
generatedTree.insert2pass(96);
generatedTree.insert2pass(67);
generatedTree.insert2pass(37);
generatedTree.insert2pass(78);
------------------------------

└── 54
    ├── 17
    │   ├── 15
    │   └── 37, 38, 40
    └── 59, 73, 84
        ├── 58
        ├── 67, 69
        ├── 78, 80
        └── 86, 96

------------------------------

generatedTree.delete(73)

------------------------------

└── 54
    ├── 17
    │   ├── 15
    │   └── 37, 38, 40
    └── 59, 69, 84
        ├── 58
        ├── 67
        ├── 78, 80
        └── 86, 96


------------------------------

END - TEST 50


START - TEST 51
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(90);
generatedTree.insert2pass(70);
generatedTree.insert2pass(26);
generatedTree.insert2pass(29);
generatedTree.insert2pass(67);
generatedTree.insert2pass(46);
generatedTree.insert2pass(30);
generatedTree.insert2pass(74);
generatedTree.insert2pass(53);
------------------------------

└── 26, 46, 70
    ├── 13
    ├── 29, 30
    ├── 53, 67
    └── 74, 90

------------------------------

generatedTree.delete(67)
generatedTree.delete(70)
generatedTree.delete(90)

------------------------------

└── 26, 46
    ├── 13
    ├── 29, 30
    └── 53, 74


------------------------------

END - TEST 51


START - TEST 52
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(79);
generatedTree.insert2pass(24);
generatedTree.insert2pass(56);
generatedTree.insert2pass(42);
generatedTree.insert2pass(14);
generatedTree.insert2pass(34);
generatedTree.insert2pass(39);
generatedTree.insert2pass(96);
generatedTree.insert2pass(80);
generatedTree.insert2pass(36);
generatedTree.insert2pass(59);
generatedTree.insert2pass(98);
generatedTree.insert2pass(29);
generatedTree.insert2pass(32);
generatedTree.insert2pass(77);
generatedTree.insert2pass(51);
generatedTree.insert2pass(66);
generatedTree.insert2pass(38);
generatedTree.insert2pass(91);
------------------------------

└── 42
    ├── 24, 36
    │   ├── 14
    │   ├── 29, 32, 34
    │   └── 38, 39
    └── 59, 79, 94
        ├── 51, 56
        ├── 66, 77
        ├── 80, 91
        └── 96, 98

------------------------------

generatedTree.delete(80)
generatedTree.delete(94)
generatedTree.delete(96)

------------------------------

└── 42
    ├── 24, 36
    │   ├── 14
    │   ├── 29, 32, 34
    │   └── 38, 39
    └── 59, 79
        ├── 51, 56
        ├── 66, 77
        └── 91, 98


------------------------------

END - TEST 52


START - TEST 53
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(57);
generatedTree.insert2pass(71);
generatedTree.insert2pass(52);
generatedTree.insert2pass(20);
generatedTree.insert2pass(73);
generatedTree.insert2pass(13);
generatedTree.insert2pass(77);
generatedTree.insert2pass(39);
generatedTree.insert2pass(19);
generatedTree.insert2pass(48);
generatedTree.insert2pass(17);
generatedTree.insert2pass(33);
generatedTree.insert2pass(82);
generatedTree.insert2pass(96);
generatedTree.insert2pass(40);
generatedTree.insert2pass(84);
generatedTree.insert2pass(38);
generatedTree.insert2pass(53);
------------------------------

└── 28, 57
    ├── 19
    │   ├── 13, 17
    │   └── 20
    ├── 39, 48
    │   ├── 33, 38
    │   ├── 40
    │   └── 52, 53
    └── 73, 82
        ├── 71
        ├── 77
        └── 84, 96

------------------------------

generatedTree.delete(20)
generatedTree.delete(19)
generatedTree.delete(28)

------------------------------

└── 39, 57
    ├── 33
    │   ├── 13, 17
    │   └── 38
    ├── 48
    │   ├── 40
    │   └── 52, 53
    └── 73, 82
        ├── 71
        ├── 77
        └── 84, 96


------------------------------

END - TEST 53


START - TEST 54
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(60);
generatedTree.insert2pass(25);
generatedTree.insert2pass(20);
generatedTree.insert2pass(86);
generatedTree.insert2pass(79);
generatedTree.insert2pass(29);
generatedTree.insert2pass(14);
generatedTree.insert2pass(77);
generatedTree.insert2pass(19);
generatedTree.insert2pass(61);
generatedTree.insert2pass(28);
generatedTree.insert2pass(23);
generatedTree.insert2pass(17);
generatedTree.insert2pass(85);
generatedTree.insert2pass(30);
------------------------------

└── 60
    ├── 19, 25
    │   ├── 14, 17
    │   ├── 20, 23
    │   └── 28, 29, 30
    └── 79
        ├── 61, 77
        └── 85, 86

------------------------------

generatedTree.delete(28)

------------------------------

└── 60
    ├── 19, 25
    │   ├── 14, 17
    │   ├── 20, 23
    │   └── 29, 30
    └── 79
        ├── 61, 77
        └── 85, 86


------------------------------

END - TEST 54


START - TEST 55
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(51);
generatedTree.insert2pass(14);
generatedTree.insert2pass(58);
generatedTree.insert2pass(11);
generatedTree.insert2pass(92);
generatedTree.insert2pass(59);
generatedTree.insert2pass(68);
generatedTree.insert2pass(93);
generatedTree.insert2pass(87);
generatedTree.insert2pass(32);
generatedTree.insert2pass(29);
generatedTree.insert2pass(96);
------------------------------

└── 59
    ├── 14, 51
    │   ├── 11
    │   ├── 29, 32
    │   └── 58
    └── 92
        ├── 68, 87
        └── 93, 96

------------------------------

generatedTree.delete(96)

------------------------------

└── 51
    ├── 14
    │   ├── 11
    │   └── 29, 32
    └── 59, 92
        ├── 58
        ├── 68, 87
        └── 93


------------------------------

END - TEST 55


START - TEST 56
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(16);
generatedTree.insert2pass(98);
generatedTree.insert2pass(48);
generatedTree.insert2pass(81);
generatedTree.insert2pass(15);
generatedTree.insert2pass(57);
generatedTree.insert2pass(20);
generatedTree.insert2pass(70);
generatedTree.insert2pass(88);
generatedTree.insert2pass(46);
generatedTree.insert2pass(99);
generatedTree.insert2pass(74);
generatedTree.insert2pass(63);
generatedTree.insert2pass(42);
generatedTree.insert2pass(28);
------------------------------

└── 57
    ├── 21, 46
    │   ├── 15, 16, 20
    │   ├── 28, 42
    │   └── 48
    └── 81
        ├── 63, 70, 74
        └── 88, 98, 99

------------------------------

generatedTree.delete(28)
generatedTree.delete(21)
generatedTree.delete(99)

------------------------------

└── 46
    ├── 20
    │   ├── 15, 16
    │   └── 42
    └── 57, 81
        ├── 48
        ├── 63, 70, 74
        └── 88, 98


------------------------------

END - TEST 56


START - TEST 57
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(89);
generatedTree.insert2pass(61);
generatedTree.insert2pass(90);
generatedTree.insert2pass(18);
------------------------------

└── 84
    ├── 18, 61
    └── 89, 90

------------------------------

generatedTree.delete(89)
generatedTree.delete(90)
generatedTree.delete(18)

------------------------------

└── 61, 84


------------------------------

END - TEST 57


START - TEST 58
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(66);
generatedTree.insert2pass(42);
generatedTree.insert2pass(13);
generatedTree.insert2pass(28);
generatedTree.insert2pass(61);
generatedTree.insert2pass(98);
generatedTree.insert2pass(32);
generatedTree.insert2pass(69);
------------------------------

└── 28, 58, 66
    ├── 13
    ├── 32, 42
    ├── 61
    └── 69, 98

------------------------------

generatedTree.delete(61)
generatedTree.delete(69)

------------------------------

└── 28, 42, 66
    ├── 13
    ├── 32
    ├── 58
    └── 98


------------------------------

END - TEST 58


START - TEST 59
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(77);
generatedTree.insert2pass(57);
generatedTree.insert2pass(34);
generatedTree.insert2pass(97);
generatedTree.insert2pass(94);
generatedTree.insert2pass(65);
generatedTree.insert2pass(82);
generatedTree.insert2pass(99);
generatedTree.insert2pass(66);
generatedTree.insert2pass(25);
generatedTree.insert2pass(52);
generatedTree.insert2pass(48);
generatedTree.insert2pass(14);
generatedTree.insert2pass(22);
generatedTree.insert2pass(41);
generatedTree.insert2pass(64);
generatedTree.insert2pass(76);
------------------------------

└── 48, 77
    ├── 25
    │   ├── 14, 16, 22
    │   └── 34, 41
    ├── 57, 65
    │   ├── 52
    │   ├── 64
    │   └── 66, 76
    └── 94
        ├── 82
        └── 97, 99

------------------------------

generatedTree.delete(66)
generatedTree.delete(48)

------------------------------

└── 52, 77
    ├── 25
    │   ├── 14, 16, 22
    │   └── 34, 41
    ├── 65
    │   ├── 57, 64
    │   └── 76
    └── 94
        ├── 82
        └── 97, 99


------------------------------

END - TEST 59


START - TEST 60
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(91);
generatedTree.insert2pass(16);
generatedTree.insert2pass(40);
generatedTree.insert2pass(81);
generatedTree.insert2pass(18);
generatedTree.insert2pass(33);
generatedTree.insert2pass(64);
generatedTree.insert2pass(41);
generatedTree.insert2pass(11);
generatedTree.insert2pass(44);
generatedTree.insert2pass(32);
generatedTree.insert2pass(99);
generatedTree.insert2pass(76);
generatedTree.insert2pass(51);
generatedTree.insert2pass(29);
generatedTree.insert2pass(46);
generatedTree.insert2pass(36);
generatedTree.insert2pass(80);
------------------------------

└── 40
    ├── 18, 32
    │   ├── 11, 16
    │   ├── 29
    │   └── 33, 36
    └── 44, 59, 81
        ├── 41
        ├── 46, 51
        ├── 64, 76, 80
        └── 91, 99

------------------------------

generatedTree.delete(36)
generatedTree.delete(76)

------------------------------

└── 40
    ├── 18, 32
    │   ├── 11, 16
    │   ├── 29
    │   └── 33
    └── 44, 59, 81
        ├── 41
        ├── 46, 51
        ├── 64, 80
        └── 91, 99


------------------------------

END - TEST 60


START - TEST 61
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(35);
generatedTree.insert2pass(88);
generatedTree.insert2pass(13);
generatedTree.insert2pass(96);
generatedTree.insert2pass(93);
generatedTree.insert2pass(68);
generatedTree.insert2pass(43);
generatedTree.insert2pass(77);
generatedTree.insert2pass(72);
------------------------------

└── 35, 68, 93
    ├── 13
    ├── 43
    ├── 72, 77, 88
    └── 96

------------------------------

generatedTree.delete(13)

------------------------------

└── 68, 93
    ├── 35, 43
    ├── 72, 77, 88
    └── 96


------------------------------

END - TEST 61


START - TEST 62
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(26);
generatedTree.insert2pass(67);
generatedTree.insert2pass(39);
generatedTree.insert2pass(72);
generatedTree.insert2pass(78);
generatedTree.insert2pass(82);
generatedTree.insert2pass(18);
generatedTree.insert2pass(55);
generatedTree.insert2pass(14);
generatedTree.insert2pass(34);
generatedTree.insert2pass(53);
generatedTree.insert2pass(47);
generatedTree.insert2pass(76);
generatedTree.insert2pass(45);
generatedTree.insert2pass(58);
generatedTree.insert2pass(44);
generatedTree.insert2pass(86);
generatedTree.insert2pass(96);
generatedTree.insert2pass(64);
generatedTree.insert2pass(31);
generatedTree.insert2pass(19);
------------------------------

└── 67
    ├── 26, 39, 53
    │   ├── 14, 18, 19
    │   ├── 31, 34
    │   ├── 44, 45, 47
    │   └── 55, 58, 64
    └── 78, 86
        ├── 72, 76
        ├── 82
        └── 87, 96

------------------------------

generatedTree.delete(86)

------------------------------

└── 67
    ├── 26, 39, 53
    │   ├── 14, 18, 19
    │   ├── 31, 34
    │   ├── 44, 45, 47
    │   └── 55, 58, 64
    └── 78, 87
        ├── 72, 76
        ├── 82
        └── 96


------------------------------

END - TEST 62


START - TEST 63
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(36);
generatedTree.insert2pass(62);
generatedTree.insert2pass(88);
generatedTree.insert2pass(66);
generatedTree.insert2pass(75);
generatedTree.insert2pass(99);
generatedTree.insert2pass(45);
generatedTree.insert2pass(90);
generatedTree.insert2pass(14);
generatedTree.insert2pass(31);
generatedTree.insert2pass(42);
generatedTree.insert2pass(32);
generatedTree.insert2pass(51);
generatedTree.insert2pass(34);
generatedTree.insert2pass(17);
------------------------------

└── 66
    ├── 31, 37, 45
    │   ├── 14, 17
    │   ├── 32, 34, 36
    │   ├── 42
    │   └── 51, 62
    └── 88
        ├── 75
        └── 90, 99

------------------------------

generatedTree.delete(62)
generatedTree.delete(51)
generatedTree.delete(14)

------------------------------

└── 66
    ├── 31, 37
    │   ├── 17
    │   ├── 32, 34, 36
    │   └── 42, 45
    └── 88
        ├── 75
        └── 90, 99


------------------------------

END - TEST 63


START - TEST 64
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(29);
generatedTree.insert2pass(20);
generatedTree.insert2pass(80);
generatedTree.insert2pass(32);
------------------------------

└── 24
    ├── 20
    └── 29, 32, 80

------------------------------

generatedTree.delete(80)

------------------------------

└── 24
    ├── 20
    └── 29, 32


------------------------------

END - TEST 64


START - TEST 65
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(56);
generatedTree.insert2pass(95);
generatedTree.insert2pass(79);
generatedTree.insert2pass(77);
generatedTree.insert2pass(64);
generatedTree.insert2pass(20);
generatedTree.insert2pass(93);
generatedTree.insert2pass(27);
generatedTree.insert2pass(28);
generatedTree.insert2pass(50);
generatedTree.insert2pass(34);
generatedTree.insert2pass(16);
generatedTree.insert2pass(83);
generatedTree.insert2pass(86);
generatedTree.insert2pass(75);
generatedTree.insert2pass(12);
------------------------------

└── 62
    ├── 27, 50
    │   ├── 12, 16, 20
    │   ├── 28, 34
    │   └── 56
    └── 79, 93
        ├── 64, 75, 77
        ├── 83, 86
        └── 95

------------------------------

generatedTree.delete(28)
generatedTree.delete(62)

------------------------------

└── 56
    ├── 27
    │   ├── 12, 16, 20
    │   └── 34, 50
    └── 79, 93
        ├── 64, 75, 77
        ├── 83, 86
        └── 95


------------------------------

END - TEST 65


START - TEST 66
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(66);
generatedTree.insert2pass(61);
generatedTree.insert2pass(29);
generatedTree.insert2pass(85);
generatedTree.insert2pass(47);
generatedTree.insert2pass(97);
generatedTree.insert2pass(99);
generatedTree.insert2pass(23);
generatedTree.insert2pass(16);
generatedTree.insert2pass(24);
generatedTree.insert2pass(34);
generatedTree.insert2pass(73);
generatedTree.insert2pass(59);
------------------------------

└── 66
    ├── 23, 47
    │   ├── 16
    │   ├── 24, 29, 34
    │   └── 59, 61
    └── 93
        ├── 73, 85
        └── 97, 99

------------------------------

generatedTree.delete(47)

------------------------------

└── 66
    ├── 23, 34
    │   ├── 16
    │   ├── 24, 29
    │   └── 59, 61
    └── 93
        ├── 73, 85
        └── 97, 99


------------------------------

END - TEST 66


START - TEST 67
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(97);
generatedTree.insert2pass(94);
generatedTree.insert2pass(49);
generatedTree.insert2pass(92);
generatedTree.insert2pass(58);
generatedTree.insert2pass(61);
generatedTree.insert2pass(50);
generatedTree.insert2pass(89);
------------------------------

└── 58, 94
    ├── 49, 50
    ├── 61, 89, 92
    └── 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(50)
generatedTree.delete(94)

------------------------------

└── 58, 89
    ├── 49
    ├── 61
    └── 92


------------------------------

END - TEST 67


START - TEST 68
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(15);
generatedTree.insert2pass(74);
generatedTree.insert2pass(23);
generatedTree.insert2pass(63);
generatedTree.insert2pass(30);
generatedTree.insert2pass(36);
generatedTree.insert2pass(31);
generatedTree.insert2pass(52);
generatedTree.insert2pass(13);
generatedTree.insert2pass(53);
generatedTree.insert2pass(75);
generatedTree.insert2pass(57);
generatedTree.insert2pass(72);
generatedTree.insert2pass(48);
generatedTree.insert2pass(93);
------------------------------

└── 36
    ├── 23
    │   ├── 13, 15
    │   └── 30, 31
    └── 53, 74
        ├── 48, 52
        ├── 57, 63, 72
        └── 75, 88, 93

------------------------------

generatedTree.delete(13)

------------------------------

└── 53
    ├── 23, 36
    │   ├── 15
    │   ├── 30, 31
    │   └── 48, 52
    └── 74
        ├── 57, 63, 72
        └── 75, 88, 93


------------------------------

END - TEST 68


START - TEST 69
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(39);
generatedTree.insert2pass(15);
generatedTree.insert2pass(28);
generatedTree.insert2pass(74);
generatedTree.insert2pass(40);
generatedTree.insert2pass(55);
generatedTree.insert2pass(89);
generatedTree.insert2pass(14);
generatedTree.insert2pass(97);
generatedTree.insert2pass(81);
generatedTree.insert2pass(21);
generatedTree.insert2pass(45);
generatedTree.insert2pass(24);
generatedTree.insert2pass(59);
generatedTree.insert2pass(58);
------------------------------

└── 74
    ├── 15, 39, 45
    │   ├── 14
    │   ├── 21, 24, 28
    │   ├── 40
    │   └── 55, 58, 59
    └── 89
        ├── 77, 81
        └── 97

------------------------------

generatedTree.delete(81)

------------------------------

└── 45
    ├── 15, 39
    │   ├── 14
    │   ├── 21, 24, 28
    │   └── 40
    └── 74, 89
        ├── 55, 58, 59
        ├── 77
        └── 97


------------------------------

END - TEST 69


START - TEST 70
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(16);
generatedTree.insert2pass(17);
generatedTree.insert2pass(32);
generatedTree.insert2pass(76);
generatedTree.insert2pass(31);
generatedTree.insert2pass(88);
generatedTree.insert2pass(74);
generatedTree.insert2pass(89);
generatedTree.insert2pass(90);
generatedTree.insert2pass(61);
generatedTree.insert2pass(49);
generatedTree.insert2pass(39);
generatedTree.insert2pass(20);
generatedTree.insert2pass(24);
------------------------------

└── 32
    ├── 17
    │   ├── 16
    │   └── 20, 24, 31
    └── 61, 76
        ├── 39, 49
        ├── 74
        └── 88, 89, 90

------------------------------

generatedTree.delete(88)
generatedTree.delete(74)
generatedTree.delete(61)

------------------------------

└── 32
    ├── 17
    │   ├── 16
    │   └── 20, 24, 31
    └── 49, 89
        ├── 39
        ├── 76
        └── 90


------------------------------

END - TEST 70


START - TEST 71
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(92);
generatedTree.insert2pass(45);
generatedTree.insert2pass(61);
generatedTree.insert2pass(65);
generatedTree.insert2pass(79);
generatedTree.insert2pass(69);
generatedTree.insert2pass(13);
generatedTree.insert2pass(57);
generatedTree.insert2pass(30);
generatedTree.insert2pass(31);
generatedTree.insert2pass(66);
generatedTree.insert2pass(21);
generatedTree.insert2pass(59);
generatedTree.insert2pass(73);
generatedTree.insert2pass(93);
generatedTree.insert2pass(52);
generatedTree.insert2pass(28);
generatedTree.insert2pass(34);
generatedTree.insert2pass(60);
generatedTree.insert2pass(99);
generatedTree.insert2pass(48);
------------------------------

└── 45
    ├── 15, 30
    │   ├── 13
    │   ├── 21, 28
    │   └── 31, 34
    └── 59, 65, 79
        ├── 48, 52, 57
        ├── 60, 61
        ├── 66, 69, 73
        └── 92, 93, 99

------------------------------

generatedTree.delete(48)
generatedTree.delete(61)
generatedTree.delete(92)

------------------------------

└── 45
    ├── 15, 30
    │   ├── 13
    │   ├── 21, 28
    │   └── 31, 34
    └── 59, 65, 79
        ├── 52, 57
        ├── 60
        ├── 66, 69, 73
        └── 93, 99


------------------------------

END - TEST 71


START - TEST 72
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(58);
generatedTree.insert2pass(69);
generatedTree.insert2pass(41);
generatedTree.insert2pass(33);
generatedTree.insert2pass(38);
generatedTree.insert2pass(67);
generatedTree.insert2pass(14);
generatedTree.insert2pass(89);
generatedTree.insert2pass(48);
generatedTree.insert2pass(34);
generatedTree.insert2pass(39);
generatedTree.insert2pass(37);
generatedTree.insert2pass(27);
generatedTree.insert2pass(90);
generatedTree.insert2pass(35);
generatedTree.insert2pass(11);
generatedTree.insert2pass(80);
------------------------------

└── 38
    ├── 33
    │   ├── 11, 14, 27
    │   └── 34, 35, 37
    └── 58, 69
        ├── 39, 41, 48
        ├── 67
        └── 80, 89, 90

------------------------------

generatedTree.delete(33)
generatedTree.delete(14)

------------------------------

└── 58
    ├── 27, 38
    │   ├── 11
    │   ├── 34, 35, 37
    │   └── 39, 41, 48
    └── 69
        ├── 67
        └── 80, 89, 90


------------------------------

END - TEST 72


START - TEST 73
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(71);
generatedTree.insert2pass(63);
generatedTree.insert2pass(41);
generatedTree.insert2pass(34);
------------------------------

└── 71
    ├── 34, 41, 63
    └── 88

------------------------------

generatedTree.delete(63)
generatedTree.delete(88)

------------------------------

└── 41
    ├── 34
    └── 71


------------------------------

END - TEST 73


START - TEST 74
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(22);
generatedTree.insert2pass(38);
generatedTree.insert2pass(56);
generatedTree.insert2pass(79);
generatedTree.insert2pass(93);
generatedTree.insert2pass(14);
generatedTree.insert2pass(98);
generatedTree.insert2pass(17);
generatedTree.insert2pass(86);
generatedTree.insert2pass(70);
generatedTree.insert2pass(97);
generatedTree.insert2pass(68);
generatedTree.insert2pass(78);
generatedTree.insert2pass(53);
generatedTree.insert2pass(50);
------------------------------

└── 56
    ├── 29
    │   ├── 14, 17, 22
    │   └── 38, 50, 53
    └── 79, 93
        ├── 68, 70, 78
        ├── 86
        └── 97, 98

------------------------------

generatedTree.delete(14)

------------------------------

└── 79
    ├── 29, 56
    │   ├── 17, 22
    │   ├── 38, 50, 53
    │   └── 68, 70, 78
    └── 93
        ├── 86
        └── 97, 98


------------------------------

END - TEST 74


START - TEST 75
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(98);
generatedTree.insert2pass(18);
generatedTree.insert2pass(84);
generatedTree.insert2pass(52);
generatedTree.insert2pass(66);
generatedTree.insert2pass(23);
generatedTree.insert2pass(53);
generatedTree.insert2pass(48);
generatedTree.insert2pass(90);
generatedTree.insert2pass(57);
generatedTree.insert2pass(27);
generatedTree.insert2pass(75);
generatedTree.insert2pass(74);
------------------------------

└── 53
    ├── 38
    │   ├── 18, 23, 27
    │   └── 48, 52
    └── 66, 84
        ├── 57
        ├── 74, 75
        └── 90, 98

------------------------------

generatedTree.delete(52)

------------------------------

└── 66
    ├── 38, 53
    │   ├── 18, 23, 27
    │   ├── 48
    │   └── 57
    └── 84
        ├── 74, 75
        └── 90, 98


------------------------------

END - TEST 75


START - TEST 76
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(92);
generatedTree.insert2pass(26);
generatedTree.insert2pass(42);
generatedTree.insert2pass(81);
------------------------------

└── 42
    ├── 26
    └── 81, 92

------------------------------

generatedTree.delete(26)

------------------------------

└── 81
    ├── 42
    └── 92


------------------------------

END - TEST 76


START - TEST 77
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(51);
generatedTree.insert2pass(39);
generatedTree.insert2pass(36);
generatedTree.insert2pass(27);
generatedTree.insert2pass(32);
generatedTree.insert2pass(30);
generatedTree.insert2pass(69);
generatedTree.insert2pass(58);
------------------------------

└── 36, 51
    ├── 27, 30, 32
    ├── 39
    └── 58, 69, 74

------------------------------

generatedTree.delete(58)
generatedTree.delete(30)
generatedTree.delete(51)

------------------------------

└── 36, 69
    ├── 27, 32
    ├── 39
    └── 74


------------------------------

END - TEST 77


START - TEST 78
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(13);
generatedTree.insert2pass(40);
generatedTree.insert2pass(54);
generatedTree.insert2pass(14);
generatedTree.insert2pass(42);
generatedTree.insert2pass(43);
generatedTree.insert2pass(92);
generatedTree.insert2pass(88);
generatedTree.insert2pass(64);
generatedTree.insert2pass(79);
generatedTree.insert2pass(93);
generatedTree.insert2pass(80);
generatedTree.insert2pass(89);
generatedTree.insert2pass(46);
generatedTree.insert2pass(37);
generatedTree.insert2pass(99);
generatedTree.insert2pass(69);
generatedTree.insert2pass(22);
generatedTree.insert2pass(95);
------------------------------

└── 42, 88
    ├── 14, 38
    │   ├── 13
    │   ├── 22, 37
    │   └── 40
    ├── 54, 79
    │   ├── 43, 46
    │   ├── 64, 69
    │   └── 80
    └── 92
        ├── 89
        └── 93, 95, 99

------------------------------

generatedTree.delete(13)
generatedTree.delete(88)
generatedTree.delete(38)

------------------------------

└── 42, 80
    ├── 22
    │   ├── 14
    │   └── 37, 40
    ├── 54, 69
    │   ├── 43, 46
    │   ├── 64
    │   └── 79
    └── 92
        ├── 89
        └── 93, 95, 99


------------------------------

END - TEST 78


START - TEST 79
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(35);
generatedTree.insert2pass(48);
generatedTree.insert2pass(42);
generatedTree.insert2pass(49);
generatedTree.insert2pass(43);
generatedTree.insert2pass(91);
generatedTree.insert2pass(71);
generatedTree.insert2pass(98);
generatedTree.insert2pass(29);
generatedTree.insert2pass(61);
generatedTree.insert2pass(26);
generatedTree.insert2pass(15);
generatedTree.insert2pass(69);
generatedTree.insert2pass(65);
generatedTree.insert2pass(74);
------------------------------

└── 48
    ├── 29, 42
    │   ├── 15, 26
    │   ├── 35
    │   └── 43
    └── 61, 71
        ├── 49
        ├── 65, 69
        └── 74, 91, 98

------------------------------

generatedTree.delete(69)
generatedTree.delete(15)
generatedTree.delete(91)

------------------------------

└── 48
    ├── 29, 42
    │   ├── 26
    │   ├── 35
    │   └── 43
    └── 61, 71
        ├── 49
        ├── 65
        └── 74, 98


------------------------------

END - TEST 79


START - TEST 80
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(48);
generatedTree.insert2pass(40);
generatedTree.insert2pass(47);
generatedTree.insert2pass(89);
generatedTree.insert2pass(55);
generatedTree.insert2pass(15);
generatedTree.insert2pass(43);
generatedTree.insert2pass(34);
generatedTree.insert2pass(61);
generatedTree.insert2pass(46);
generatedTree.insert2pass(99);
generatedTree.insert2pass(96);
generatedTree.insert2pass(68);
------------------------------

└── 48
    ├── 40
    │   ├── 15, 34, 37
    │   └── 43, 46, 47
    └── 61, 96
        ├── 55
        ├── 68, 89
        └── 99

------------------------------

generatedTree.delete(55)
generatedTree.delete(15)
generatedTree.delete(34)

------------------------------

└── 68
    ├── 40, 48
    │   ├── 37
    │   ├── 43, 46, 47
    │   └── 61
    └── 96
        ├── 89
        └── 99


------------------------------

END - TEST 80


START - TEST 81
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(58);
generatedTree.insert2pass(27);
generatedTree.insert2pass(95);
generatedTree.insert2pass(48);
generatedTree.insert2pass(34);
generatedTree.insert2pass(31);
generatedTree.insert2pass(79);
------------------------------

└── 34, 58
    ├── 27, 31
    ├── 48
    └── 73, 79, 95

------------------------------

generatedTree.delete(48)
generatedTree.delete(31)
generatedTree.delete(79)

------------------------------

└── 58
    ├── 27, 34
    └── 73, 95


------------------------------

END - TEST 81


START - TEST 82
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(97);
generatedTree.insert2pass(74);
generatedTree.insert2pass(55);
generatedTree.insert2pass(21);
generatedTree.insert2pass(18);
generatedTree.insert2pass(42);
generatedTree.insert2pass(76);
generatedTree.insert2pass(63);
generatedTree.insert2pass(69);
generatedTree.insert2pass(47);
generatedTree.insert2pass(39);
generatedTree.insert2pass(90);
generatedTree.insert2pass(53);
generatedTree.insert2pass(94);
generatedTree.insert2pass(61);
generatedTree.insert2pass(14);
generatedTree.insert2pass(57);
generatedTree.insert2pass(23);
generatedTree.insert2pass(22);
generatedTree.insert2pass(52);
------------------------------

└── 55
    ├── 21, 42
    │   ├── 14, 18
    │   ├── 22, 23, 39
    │   └── 47, 52, 53
    └── 64, 74, 90
        ├── 57, 61, 63
        ├── 69
        ├── 76
        └── 94, 97

------------------------------

generatedTree.delete(42)
generatedTree.delete(23)

------------------------------

└── 55
    ├── 21, 39
    │   ├── 14, 18
    │   ├── 22
    │   └── 47, 52, 53
    └── 64, 74, 90
        ├── 57, 61, 63
        ├── 69
        ├── 76
        └── 94, 97


------------------------------

END - TEST 82


START - TEST 83
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(26);
generatedTree.insert2pass(69);
generatedTree.insert2pass(56);
generatedTree.insert2pass(59);
generatedTree.insert2pass(70);
generatedTree.insert2pass(53);
generatedTree.insert2pass(92);
generatedTree.insert2pass(45);
------------------------------

└── 26, 59
    ├── 19
    ├── 45, 53, 56
    └── 69, 70, 92

------------------------------

generatedTree.delete(53)

------------------------------

└── 26, 59
    ├── 19
    ├── 45, 56
    └── 69, 70, 92


------------------------------

END - TEST 83


START - TEST 84
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(61);
generatedTree.insert2pass(91);
generatedTree.insert2pass(65);
generatedTree.insert2pass(43);
generatedTree.insert2pass(26);
generatedTree.insert2pass(31);
generatedTree.insert2pass(77);
generatedTree.insert2pass(20);
generatedTree.insert2pass(98);
generatedTree.insert2pass(66);
------------------------------

└── 43, 65, 91
    ├── 20, 26, 31
    ├── 61
    ├── 66, 77
    └── 98

------------------------------

generatedTree.delete(20)

------------------------------

└── 43, 65, 91
    ├── 26, 31
    ├── 61
    ├── 66, 77
    └── 98


------------------------------

END - TEST 84


START - TEST 85
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(72);
generatedTree.insert2pass(76);
generatedTree.insert2pass(16);
generatedTree.insert2pass(15);
generatedTree.insert2pass(48);
generatedTree.insert2pass(75);
generatedTree.insert2pass(90);
generatedTree.insert2pass(33);
generatedTree.insert2pass(78);
generatedTree.insert2pass(42);
generatedTree.insert2pass(68);
generatedTree.insert2pass(50);
generatedTree.insert2pass(55);
generatedTree.insert2pass(88);
generatedTree.insert2pass(98);
generatedTree.insert2pass(93);
generatedTree.insert2pass(65);
------------------------------

└── 72
    ├── 16, 42, 50
    │   ├── 15
    │   ├── 33
    │   ├── 48
    │   └── 55, 65, 68
    └── 76, 87, 90
        ├── 75
        ├── 78
        ├── 88
        └── 93, 98

------------------------------

generatedTree.delete(90)
generatedTree.delete(87)
generatedTree.delete(48)

------------------------------

└── 72
    ├── 16, 42, 55
    │   ├── 15
    │   ├── 33
    │   ├── 50
    │   └── 65, 68
    └── 76, 93
        ├── 75
        ├── 78, 88
        └── 98


------------------------------

END - TEST 85


START - TEST 86
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(88);
generatedTree.insert2pass(34);
generatedTree.insert2pass(91);
generatedTree.insert2pass(87);
generatedTree.insert2pass(24);
generatedTree.insert2pass(75);
generatedTree.insert2pass(16);
generatedTree.insert2pass(94);
generatedTree.insert2pass(92);
generatedTree.insert2pass(85);
generatedTree.insert2pass(89);
generatedTree.insert2pass(72);
generatedTree.insert2pass(80);
generatedTree.insert2pass(78);
generatedTree.insert2pass(67);
generatedTree.insert2pass(22);
------------------------------

└── 88
    ├── 34, 75, 85
    │   ├── 16, 22, 24
    │   ├── 67, 72
    │   ├── 78, 80
    │   └── 87
    └── 94
        ├── 89, 91, 92
        └── 98

------------------------------

generatedTree.delete(16)

------------------------------

└── 88
    ├── 34, 75, 85
    │   ├── 22, 24
    │   ├── 67, 72
    │   ├── 78, 80
    │   └── 87
    └── 94
        ├── 89, 91, 92
        └── 98


------------------------------

END - TEST 86


START - TEST 87
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(91);
generatedTree.insert2pass(84);
generatedTree.insert2pass(71);
generatedTree.insert2pass(29);
generatedTree.insert2pass(43);
generatedTree.insert2pass(28);
generatedTree.insert2pass(44);
generatedTree.insert2pass(66);
generatedTree.insert2pass(16);
generatedTree.insert2pass(76);
generatedTree.insert2pass(68);
generatedTree.insert2pass(85);
generatedTree.insert2pass(42);
generatedTree.insert2pass(72);
generatedTree.insert2pass(93);
generatedTree.insert2pass(31);
generatedTree.insert2pass(98);
generatedTree.insert2pass(60);
generatedTree.insert2pass(52);
------------------------------

└── 63
    ├── 29, 43
    │   ├── 16, 28
    │   ├── 31, 42
    │   └── 44, 52, 60
    └── 71, 84, 91
        ├── 66, 68
        ├── 72, 76
        ├── 85
        └── 93, 98

------------------------------

generatedTree.delete(44)
generatedTree.delete(68)

------------------------------

└── 63
    ├── 29, 43
    │   ├── 16, 28
    │   ├── 31, 42
    │   └── 52, 60
    └── 71, 84, 91
        ├── 66
        ├── 72, 76
        ├── 85
        └── 93, 98


------------------------------

END - TEST 87


START - TEST 88
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(97);
generatedTree.insert2pass(85);
generatedTree.insert2pass(30);
generatedTree.insert2pass(87);
generatedTree.insert2pass(40);
generatedTree.insert2pass(69);
------------------------------

└── 85, 94
    ├── 30, 40, 69
    ├── 87
    └── 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(85)

------------------------------

└── 69
    ├── 30, 40
    └── 87, 94


------------------------------

END - TEST 88


START - TEST 89
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(13);
generatedTree.insert2pass(55);
generatedTree.insert2pass(57);
generatedTree.insert2pass(33);
generatedTree.insert2pass(17);
generatedTree.insert2pass(75);
generatedTree.insert2pass(92);
generatedTree.insert2pass(80);
------------------------------

└── 55, 75
    ├── 13, 17, 33
    ├── 57
    └── 80, 92

------------------------------

generatedTree.delete(17)
generatedTree.delete(13)
generatedTree.delete(55)

------------------------------

└── 75
    ├── 33, 57
    └── 80, 92


------------------------------

END - TEST 89


START - TEST 90
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(81);
generatedTree.insert2pass(25);
generatedTree.insert2pass(80);
generatedTree.insert2pass(66);
generatedTree.insert2pass(97);
generatedTree.insert2pass(31);
generatedTree.insert2pass(26);
generatedTree.insert2pass(28);
generatedTree.insert2pass(17);
generatedTree.insert2pass(18);
generatedTree.insert2pass(87);
generatedTree.insert2pass(19);
generatedTree.insert2pass(14);
generatedTree.insert2pass(78);
generatedTree.insert2pass(76);
generatedTree.insert2pass(75);
------------------------------

└── 63
    ├── 18, 26
    │   ├── 14, 17
    │   ├── 19, 25
    │   └── 28, 31
    └── 76, 80
        ├── 66, 75
        ├── 78
        └── 81, 87, 97

------------------------------

generatedTree.delete(17)
generatedTree.delete(75)
generatedTree.delete(26)

------------------------------

└── 63
    ├── 18, 25
    │   ├── 14
    │   ├── 19
    │   └── 28, 31
    └── 76, 80
        ├── 66
        ├── 78
        └── 81, 87, 97


------------------------------

END - TEST 90


START - TEST 91
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(76);
generatedTree.insert2pass(92);
generatedTree.insert2pass(94);
generatedTree.insert2pass(53);
generatedTree.insert2pass(73);
generatedTree.insert2pass(97);
generatedTree.insert2pass(38);
generatedTree.insert2pass(96);
------------------------------

└── 70, 76, 94
    ├── 38, 53
    ├── 73
    ├── 92
    └── 96, 97

------------------------------

generatedTree.delete(76)
generatedTree.delete(94)

------------------------------

└── 70, 92
    ├── 38, 53
    ├── 73
    └── 96, 97


------------------------------

END - TEST 91


START - TEST 92
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(16);
generatedTree.insert2pass(12);
generatedTree.insert2pass(91);
generatedTree.insert2pass(60);
generatedTree.insert2pass(73);
generatedTree.insert2pass(99);
generatedTree.insert2pass(35);
generatedTree.insert2pass(98);
generatedTree.insert2pass(29);
generatedTree.insert2pass(51);
generatedTree.insert2pass(42);
generatedTree.insert2pass(49);
generatedTree.insert2pass(67);
generatedTree.insert2pass(94);
generatedTree.insert2pass(87);
------------------------------

└── 60
    ├── 16, 35
    │   ├── 12
    │   ├── 29
    │   └── 42, 49, 51
    └── 89, 98
        ├── 67, 73, 87
        ├── 91, 94
        └── 99

------------------------------

generatedTree.delete(60)
generatedTree.delete(12)

------------------------------

└── 51
    ├── 35
    │   ├── 16, 29
    │   └── 42, 49
    └── 89, 98
        ├── 67, 73, 87
        ├── 91, 94
        └── 99


------------------------------

END - TEST 92


START - TEST 93
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(35);
generatedTree.insert2pass(73);
generatedTree.insert2pass(71);
generatedTree.insert2pass(93);
generatedTree.insert2pass(66);
generatedTree.insert2pass(56);
generatedTree.insert2pass(38);
generatedTree.insert2pass(50);
generatedTree.insert2pass(75);
generatedTree.insert2pass(98);
------------------------------

└── 38, 64, 73
    ├── 35
    ├── 50, 56
    ├── 66, 71
    └── 75, 93, 98

------------------------------

generatedTree.delete(71)
generatedTree.delete(98)
generatedTree.delete(50)

------------------------------

└── 38, 64, 73
    ├── 35
    ├── 56
    ├── 66
    └── 75, 93


------------------------------

END - TEST 93


START - TEST 94
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(28);
generatedTree.insert2pass(67);
generatedTree.insert2pass(99);
generatedTree.insert2pass(74);
generatedTree.insert2pass(20);
generatedTree.insert2pass(24);
generatedTree.insert2pass(57);
generatedTree.insert2pass(87);
generatedTree.insert2pass(88);
generatedTree.insert2pass(59);
generatedTree.insert2pass(27);
generatedTree.insert2pass(51);
generatedTree.insert2pass(12);
------------------------------

└── 67
    ├── 24, 57
    │   ├── 12, 20
    │   ├── 27, 28, 51
    │   └── 59
    └── 87
        ├── 74
        └── 88, 99

------------------------------

generatedTree.delete(74)
generatedTree.delete(20)
generatedTree.delete(12)

------------------------------

└── 67
    ├── 27, 57
    │   ├── 24
    │   ├── 28, 51
    │   └── 59
    └── 88
        ├── 87
        └── 99


------------------------------

END - TEST 94


START - TEST 95
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(86);
generatedTree.insert2pass(78);
generatedTree.insert2pass(31);
generatedTree.insert2pass(89);
generatedTree.insert2pass(53);
generatedTree.insert2pass(73);
generatedTree.insert2pass(56);
generatedTree.insert2pass(65);
generatedTree.insert2pass(62);
------------------------------

└── 53, 65, 78
    ├── 31
    ├── 56, 62
    ├── 73
    └── 86, 89

------------------------------

generatedTree.delete(78)
generatedTree.delete(62)

------------------------------

└── 53, 65, 86
    ├── 31
    ├── 56
    ├── 73
    └── 89


------------------------------

END - TEST 95


START - TEST 96
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(77);
generatedTree.insert2pass(26);
generatedTree.insert2pass(44);
generatedTree.insert2pass(40);
generatedTree.insert2pass(46);
generatedTree.insert2pass(58);
generatedTree.insert2pass(62);
generatedTree.insert2pass(51);
generatedTree.insert2pass(95);
generatedTree.insert2pass(80);
generatedTree.insert2pass(57);
generatedTree.insert2pass(35);
generatedTree.insert2pass(13);
------------------------------

└── 46
    ├── 40
    │   ├── 13, 26, 35
    │   └── 44
    └── 58, 77
        ├── 51, 57
        ├── 62
        └── 80, 90, 95

------------------------------

generatedTree.delete(90)
generatedTree.delete(13)

------------------------------

└── 58
    ├── 40, 46
    │   ├── 26, 35
    │   ├── 44
    │   └── 51, 57
    └── 77
        ├── 62
        └── 80, 95


------------------------------

END - TEST 96


START - TEST 97
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(66);
generatedTree.insert2pass(44);
generatedTree.insert2pass(89);
generatedTree.insert2pass(48);
generatedTree.insert2pass(46);
generatedTree.insert2pass(22);
generatedTree.insert2pass(41);
generatedTree.insert2pass(98);
generatedTree.insert2pass(20);
generatedTree.insert2pass(69);
generatedTree.insert2pass(91);
generatedTree.insert2pass(47);
------------------------------

└── 46
    ├── 41
    │   ├── 20, 22
    │   └── 44
    └── 56, 89
        ├── 47, 48
        ├── 66, 69
        └── 91, 98

------------------------------

generatedTree.delete(41)
generatedTree.delete(44)
generatedTree.delete(46)

------------------------------

└── 56
    ├── 47
    │   ├── 20, 22
    │   └── 48
    └── 89
        ├── 66, 69
        └── 91, 98


------------------------------

END - TEST 97


START - TEST 98
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(78);
generatedTree.insert2pass(75);
generatedTree.insert2pass(41);
generatedTree.insert2pass(19);
generatedTree.insert2pass(28);
generatedTree.insert2pass(21);
generatedTree.insert2pass(34);
generatedTree.insert2pass(53);
generatedTree.insert2pass(13);
generatedTree.insert2pass(44);
generatedTree.insert2pass(98);
generatedTree.insert2pass(95);
generatedTree.insert2pass(52);
generatedTree.insert2pass(11);
generatedTree.insert2pass(33);
generatedTree.insert2pass(62);
generatedTree.insert2pass(67);
generatedTree.insert2pass(54);
------------------------------

└── 41
    ├── 21
    │   ├── 11, 13, 19
    │   └── 28, 33, 34
    └── 53, 67, 78
        ├── 44, 52
        ├── 54, 62
        ├── 75
        └── 84, 95, 98

------------------------------

generatedTree.delete(19)
generatedTree.delete(33)
generatedTree.delete(95)

------------------------------

└── 53
    ├── 21, 41
    │   ├── 11, 13
    │   ├── 28, 34
    │   └── 44, 52
    └── 67, 78
        ├── 54, 62
        ├── 75
        └── 84, 98


------------------------------

END - TEST 98


START - TEST 99
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(53);
generatedTree.insert2pass(32);
generatedTree.insert2pass(44);
generatedTree.insert2pass(97);
generatedTree.insert2pass(64);
generatedTree.insert2pass(38);
generatedTree.insert2pass(51);
generatedTree.insert2pass(52);
generatedTree.insert2pass(75);
generatedTree.insert2pass(35);
generatedTree.insert2pass(43);
generatedTree.insert2pass(63);
------------------------------

└── 44
    ├── 35
    │   ├── 32
    │   └── 38, 43
    └── 52, 64
        ├── 51
        ├── 53, 63
        └── 75, 97

------------------------------

generatedTree.delete(52)
generatedTree.delete(44)
generatedTree.delete(35)

------------------------------

└── 38, 51, 64
    ├── 32
    ├── 43
    ├── 53, 63
    └── 75, 97


------------------------------

END - TEST 99


START - TEST 100
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(23);
generatedTree.insert2pass(46);
generatedTree.insert2pass(39);
generatedTree.insert2pass(52);
generatedTree.insert2pass(16);
generatedTree.insert2pass(91);
generatedTree.insert2pass(64);
generatedTree.insert2pass(30);
generatedTree.insert2pass(72);
generatedTree.insert2pass(21);
generatedTree.insert2pass(53);
generatedTree.insert2pass(44);
generatedTree.insert2pass(27);
generatedTree.insert2pass(33);
generatedTree.insert2pass(57);
generatedTree.insert2pass(82);
generatedTree.insert2pass(73);
generatedTree.insert2pass(54);
generatedTree.insert2pass(37);
generatedTree.insert2pass(38);
generatedTree.insert2pass(89);
------------------------------

└── 39, 57
    ├── 23, 30
    │   ├── 16, 21
    │   ├── 27
    │   └── 33, 37, 38
    ├── 52
    │   ├── 44, 46
    │   └── 53, 54
    └── 72, 82
        ├── 64
        ├── 73
        └── 89, 91

------------------------------

generatedTree.delete(64)

------------------------------

└── 39, 57
    ├── 23, 30
    │   ├── 16, 21
    │   ├── 27
    │   └── 33, 37, 38
    ├── 52
    │   ├── 44, 46
    │   └── 53, 54
    └── 82
        ├── 72, 73
        └── 89, 91


------------------------------

END - TEST 100


START - TEST 101
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(56);
generatedTree.insert2pass(91);
generatedTree.insert2pass(50);
generatedTree.insert2pass(37);
generatedTree.insert2pass(95);
generatedTree.insert2pass(49);
generatedTree.insert2pass(18);
generatedTree.insert2pass(85);
generatedTree.insert2pass(89);
generatedTree.insert2pass(80);
generatedTree.insert2pass(22);
generatedTree.insert2pass(54);
generatedTree.insert2pass(12);
------------------------------

└── 56
    ├── 22, 49
    │   ├── 12, 18
    │   ├── 37
    │   └── 50, 54
    └── 91
        ├── 80, 85, 89
        └── 95

------------------------------

generatedTree.delete(91)
generatedTree.delete(12)
generatedTree.delete(22)

------------------------------

└── 56
    ├── 49
    │   ├── 18, 37
    │   └── 50, 54
    └── 89
        ├── 80, 85
        └── 95


------------------------------

END - TEST 101


START - TEST 102
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(72);
generatedTree.insert2pass(95);
generatedTree.insert2pass(89);
generatedTree.insert2pass(57);
generatedTree.insert2pass(37);
generatedTree.insert2pass(29);
generatedTree.insert2pass(91);
generatedTree.insert2pass(70);
------------------------------

└── 37, 72
    ├── 29, 33
    ├── 57, 70
    └── 89, 91, 95

------------------------------

generatedTree.delete(29)
generatedTree.delete(57)
generatedTree.delete(91)

------------------------------

└── 37, 72
    ├── 33
    ├── 70
    └── 89, 95


------------------------------

END - TEST 102


START - TEST 103
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(69);
generatedTree.insert2pass(85);
generatedTree.insert2pass(45);
generatedTree.insert2pass(70);
generatedTree.insert2pass(37);
generatedTree.insert2pass(23);
generatedTree.insert2pass(40);
generatedTree.insert2pass(25);
generatedTree.insert2pass(18);
generatedTree.insert2pass(26);
generatedTree.insert2pass(78);
generatedTree.insert2pass(63);
generatedTree.insert2pass(48);
generatedTree.insert2pass(82);
generatedTree.insert2pass(55);
generatedTree.insert2pass(22);
generatedTree.insert2pass(95);
generatedTree.insert2pass(46);
------------------------------

└── 37, 69
    ├── 24
    │   ├── 18, 22, 23
    │   └── 25, 26
    ├── 45, 55
    │   ├── 40
    │   ├── 46, 48
    │   └── 63
    └── 78
        ├── 70
        └── 82, 85, 95

------------------------------

generatedTree.delete(78)
generatedTree.delete(23)

------------------------------

└── 55
    ├── 24, 37, 45
    │   ├── 18, 22
    │   ├── 25, 26
    │   ├── 40
    │   └── 46, 48
    └── 69, 82
        ├── 63
        ├── 70
        └── 85, 95


------------------------------

END - TEST 103


START - TEST 104
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(25);
generatedTree.insert2pass(18);
generatedTree.insert2pass(42);
generatedTree.insert2pass(36);
generatedTree.insert2pass(12);
generatedTree.insert2pass(70);
generatedTree.insert2pass(82);
generatedTree.insert2pass(79);
generatedTree.insert2pass(28);
generatedTree.insert2pass(29);
generatedTree.insert2pass(38);
generatedTree.insert2pass(45);
generatedTree.insert2pass(13);
generatedTree.insert2pass(74);
generatedTree.insert2pass(88);
generatedTree.insert2pass(43);
generatedTree.insert2pass(93);
generatedTree.insert2pass(90);
generatedTree.insert2pass(81);
generatedTree.insert2pass(71);
generatedTree.insert2pass(78);
generatedTree.insert2pass(31);
------------------------------

└── 29, 70
    ├── 25
    │   ├── 12, 13, 18
    │   └── 28
    ├── 42
    │   ├── 31, 36, 38
    │   └── 43, 45
    └── 79, 88
        ├── 71, 74, 78
        ├── 81, 82
        └── 90, 93

------------------------------

generatedTree.delete(12)
generatedTree.delete(38)
generatedTree.delete(88)

------------------------------

└── 70
    ├── 25, 29, 42
    │   ├── 13, 18
    │   ├── 28
    │   ├── 31, 36
    │   └── 43, 45
    └── 79, 82
        ├── 71, 74, 78
        ├── 81
        └── 90, 93


------------------------------

END - TEST 104


START - TEST 105
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(40);
generatedTree.insert2pass(84);
generatedTree.insert2pass(54);
generatedTree.insert2pass(26);
generatedTree.insert2pass(31);
generatedTree.insert2pass(90);
generatedTree.insert2pass(51);
generatedTree.insert2pass(78);
generatedTree.insert2pass(88);
generatedTree.insert2pass(81);
generatedTree.insert2pass(60);
generatedTree.insert2pass(15);
generatedTree.insert2pass(61);
generatedTree.insert2pass(71);
generatedTree.insert2pass(57);
generatedTree.insert2pass(30);
------------------------------

└── 54
    ├── 26, 40
    │   ├── 15
    │   ├── 30, 31
    │   └── 51
    └── 61, 78, 84
        ├── 57, 60
        ├── 71
        ├── 81
        └── 87, 88, 90

------------------------------

generatedTree.delete(61)
generatedTree.delete(87)

------------------------------

└── 54
    ├── 26, 40
    │   ├── 15
    │   ├── 30, 31
    │   └── 51
    └── 60, 78, 84
        ├── 57
        ├── 71
        ├── 81
        └── 88, 90


------------------------------

END - TEST 105


START - TEST 106
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(60);
generatedTree.insert2pass(78);
generatedTree.insert2pass(54);
generatedTree.insert2pass(71);
generatedTree.insert2pass(65);
generatedTree.insert2pass(42);
generatedTree.insert2pass(32);
generatedTree.insert2pass(62);
------------------------------

└── 42, 60, 71
    ├── 32, 33
    ├── 54
    ├── 62, 65
    └── 78

------------------------------

generatedTree.delete(32)
generatedTree.delete(71)

------------------------------

└── 42, 60, 65
    ├── 33
    ├── 54
    ├── 62
    └── 78


------------------------------

END - TEST 106


START - TEST 107
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(34);
generatedTree.insert2pass(27);
generatedTree.insert2pass(18);
generatedTree.insert2pass(70);
generatedTree.insert2pass(38);
generatedTree.insert2pass(23);
generatedTree.insert2pass(28);
generatedTree.insert2pass(52);
generatedTree.insert2pass(31);
generatedTree.insert2pass(96);
------------------------------

└── 23, 34, 70
    ├── 18
    ├── 27, 28, 31
    ├── 38, 52
    └── 84, 96

------------------------------

generatedTree.delete(27)

------------------------------

└── 23, 34, 70
    ├── 18
    ├── 28, 31
    ├── 38, 52
    └── 84, 96


------------------------------

END - TEST 107


START - TEST 108
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(14);
generatedTree.insert2pass(42);
generatedTree.insert2pass(40);
generatedTree.insert2pass(13);
generatedTree.insert2pass(70);
generatedTree.insert2pass(57);
generatedTree.insert2pass(83);
generatedTree.insert2pass(51);
------------------------------

└── 40, 57
    ├── 13, 14
    ├── 42, 51
    └── 70, 83

------------------------------

generatedTree.delete(51)
generatedTree.delete(14)
generatedTree.delete(57)

------------------------------

└── 40, 70
    ├── 13
    ├── 42
    └── 83


------------------------------

END - TEST 108


START - TEST 109
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(18);
generatedTree.insert2pass(22);
generatedTree.insert2pass(14);
generatedTree.insert2pass(63);
generatedTree.insert2pass(59);
generatedTree.insert2pass(47);
generatedTree.insert2pass(56);
generatedTree.insert2pass(75);
generatedTree.insert2pass(31);
generatedTree.insert2pass(72);
generatedTree.insert2pass(39);
generatedTree.insert2pass(57);
generatedTree.insert2pass(16);
generatedTree.insert2pass(42);
generatedTree.insert2pass(60);
generatedTree.insert2pass(89);
generatedTree.insert2pass(97);
------------------------------

└── 47
    ├── 18, 31
    │   ├── 14, 16
    │   ├── 22
    │   └── 39, 42
    └── 59, 72
        ├── 56, 57
        ├── 60, 63
        └── 75, 89, 97

------------------------------

generatedTree.delete(97)
generatedTree.delete(63)
generatedTree.delete(72)

------------------------------

└── 47
    ├── 18, 31
    │   ├── 14, 16
    │   ├── 22
    │   └── 39, 42
    └── 59, 75
        ├── 56, 57
        ├── 60
        └── 89


------------------------------

END - TEST 109


START - TEST 110
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(91);
generatedTree.insert2pass(68);
generatedTree.insert2pass(35);
generatedTree.insert2pass(72);
generatedTree.insert2pass(21);
generatedTree.insert2pass(57);
generatedTree.insert2pass(28);
generatedTree.insert2pass(53);
generatedTree.insert2pass(61);
generatedTree.insert2pass(15);
generatedTree.insert2pass(37);
generatedTree.insert2pass(96);
generatedTree.insert2pass(30);
generatedTree.insert2pass(62);
generatedTree.insert2pass(77);
generatedTree.insert2pass(38);
generatedTree.insert2pass(22);
generatedTree.insert2pass(16);
generatedTree.insert2pass(26);
generatedTree.insert2pass(84);
------------------------------

└── 57
    ├── 21, 28, 35
    │   ├── 15, 16
    │   ├── 22, 26
    │   ├── 30
    │   └── 37, 38, 53
    └── 68, 91
        ├── 61, 62
        ├── 72, 77, 84
        └── 96

------------------------------

generatedTree.delete(68)
generatedTree.delete(53)
generatedTree.delete(96)

------------------------------

└── 57
    ├── 21, 28, 35
    │   ├── 15, 16
    │   ├── 22, 26
    │   ├── 30
    │   └── 37, 38
    └── 62, 84
        ├── 61
        ├── 72, 77
        └── 91


------------------------------

END - TEST 110


START - TEST 111
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(81);
generatedTree.insert2pass(97);
generatedTree.insert2pass(73);
generatedTree.insert2pass(31);
generatedTree.insert2pass(78);
generatedTree.insert2pass(91);
generatedTree.insert2pass(76);
generatedTree.insert2pass(85);
generatedTree.insert2pass(17);
generatedTree.insert2pass(92);
------------------------------

└── 73, 81, 91
    ├── 17, 31
    ├── 76, 78
    ├── 85
    └── 92, 97

------------------------------

generatedTree.delete(73)
generatedTree.delete(76)
generatedTree.delete(91)

------------------------------

└── 31, 81, 92
    ├── 17
    ├── 78
    ├── 85
    └── 97


------------------------------

END - TEST 111


START - TEST 112
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(28);
generatedTree.insert2pass(48);
generatedTree.insert2pass(88);
generatedTree.insert2pass(74);
generatedTree.insert2pass(49);
generatedTree.insert2pass(85);
generatedTree.insert2pass(25);
generatedTree.insert2pass(32);
generatedTree.insert2pass(61);
generatedTree.insert2pass(99);
generatedTree.insert2pass(71);
generatedTree.insert2pass(51);
generatedTree.insert2pass(55);
generatedTree.insert2pass(84);
generatedTree.insert2pass(67);
generatedTree.insert2pass(41);
generatedTree.insert2pass(76);
generatedTree.insert2pass(59);
generatedTree.insert2pass(65);
------------------------------

└── 48, 74
    ├── 28
    │   ├── 25
    │   └── 32, 41
    ├── 51, 61
    │   ├── 49
    │   ├── 55, 59
    │   └── 65, 67, 71
    └── 88
        ├── 76, 84, 85
        └── 93, 99

------------------------------

generatedTree.delete(93)

------------------------------

└── 48, 61
    ├── 28
    │   ├── 25
    │   └── 32, 41
    ├── 51
    │   ├── 49
    │   └── 55, 59
    └── 74, 88
        ├── 65, 67, 71
        ├── 76, 84, 85
        └── 99


------------------------------

END - TEST 112


START - TEST 113
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(31);
generatedTree.insert2pass(91);
generatedTree.insert2pass(35);
generatedTree.insert2pass(46);
generatedTree.insert2pass(92);
generatedTree.insert2pass(61);
generatedTree.insert2pass(83);
generatedTree.insert2pass(48);
generatedTree.insert2pass(52);
------------------------------

└── 46
    ├── 31
    │   ├── 19
    │   └── 35
    └── 61, 91
        ├── 48, 52
        ├── 83
        └── 92

------------------------------

generatedTree.delete(91)
generatedTree.delete(92)

------------------------------

└── 31, 46, 61
    ├── 19
    ├── 35
    ├── 48, 52
    └── 83


------------------------------

END - TEST 113


START - TEST 114
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(29);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(79);
generatedTree.insert2pass(21);
generatedTree.insert2pass(39);
generatedTree.insert2pass(47);
generatedTree.insert2pass(12);
generatedTree.insert2pass(52);
generatedTree.insert2pass(78);
generatedTree.insert2pass(63);
generatedTree.insert2pass(54);
------------------------------

└── 36, 47, 61
    ├── 12, 21, 29
    ├── 39
    ├── 52, 54
    └── 63, 78, 79

------------------------------

generatedTree.delete(63)
generatedTree.delete(61)
generatedTree.delete(39)

------------------------------

└── 29, 47, 54
    ├── 12, 21
    ├── 36
    ├── 52
    └── 78, 79


------------------------------

END - TEST 114


START - TEST 115
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(99);
generatedTree.insert2pass(47);
generatedTree.insert2pass(75);
generatedTree.insert2pass(64);
generatedTree.insert2pass(56);
------------------------------

└── 75
    ├── 47, 56, 64
    └── 99

------------------------------

generatedTree.delete(56)
generatedTree.delete(99)

------------------------------

└── 64
    ├── 47
    └── 75


------------------------------

END - TEST 115


START - TEST 116
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(87);
generatedTree.insert2pass(18);
generatedTree.insert2pass(11);
generatedTree.insert2pass(46);
generatedTree.insert2pass(50);
generatedTree.insert2pass(91);
generatedTree.insert2pass(34);
generatedTree.insert2pass(82);
generatedTree.insert2pass(84);
generatedTree.insert2pass(81);
generatedTree.insert2pass(98);
------------------------------

└── 18, 50, 87
    ├── 11
    ├── 34, 46
    ├── 81, 82, 84
    └── 91, 98

------------------------------

generatedTree.delete(46)
generatedTree.delete(81)
generatedTree.delete(98)

------------------------------

└── 18, 50, 87
    ├── 11
    ├── 34
    ├── 82, 84
    └── 91


------------------------------

END - TEST 116


START - TEST 117
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(29);
generatedTree.insert2pass(63);
generatedTree.insert2pass(92);
generatedTree.insert2pass(86);
generatedTree.insert2pass(97);
generatedTree.insert2pass(40);
generatedTree.insert2pass(14);
generatedTree.insert2pass(75);
generatedTree.insert2pass(69);
generatedTree.insert2pass(98);
generatedTree.insert2pass(25);
generatedTree.insert2pass(15);
generatedTree.insert2pass(80);
generatedTree.insert2pass(38);
generatedTree.insert2pass(24);
------------------------------

└── 63
    ├── 15, 29
    │   ├── 14
    │   ├── 24, 25
    │   └── 38, 40
    └── 75, 88
        ├── 69
        ├── 80, 86
        └── 92, 97, 98

------------------------------

generatedTree.delete(92)

------------------------------

└── 63
    ├── 15, 29
    │   ├── 14
    │   ├── 24, 25
    │   └── 38, 40
    └── 75, 88
        ├── 69
        ├── 80, 86
        └── 97, 98


------------------------------

END - TEST 117


START - TEST 118
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(20);
generatedTree.insert2pass(84);
generatedTree.insert2pass(33);
generatedTree.insert2pass(79);
generatedTree.insert2pass(90);
generatedTree.insert2pass(31);
------------------------------

└── 33
    ├── 20, 31
    └── 79, 84, 90

------------------------------

generatedTree.delete(90)
generatedTree.delete(84)

------------------------------

└── 33
    ├── 20, 31
    └── 79


------------------------------

END - TEST 118


START - TEST 119
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(20);
generatedTree.insert2pass(96);
generatedTree.insert2pass(68);
generatedTree.insert2pass(38);
generatedTree.insert2pass(74);
generatedTree.insert2pass(53);
generatedTree.insert2pass(87);
generatedTree.insert2pass(73);
generatedTree.insert2pass(52);
generatedTree.insert2pass(30);
generatedTree.insert2pass(55);
generatedTree.insert2pass(81);
generatedTree.insert2pass(99);
generatedTree.insert2pass(83);
generatedTree.insert2pass(29);
------------------------------

└── 57
    ├── 38
    │   ├── 20, 29, 30
    │   └── 52, 53, 55
    └── 74, 87
        ├── 68, 73
        ├── 81, 83
        └── 96, 99

------------------------------

generatedTree.delete(55)

------------------------------

└── 74
    ├── 38, 57
    │   ├── 20, 29, 30
    │   ├── 52, 53
    │   └── 68, 73
    └── 87
        ├── 81, 83
        └── 96, 99


------------------------------

END - TEST 119


START - TEST 120
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(25);
generatedTree.insert2pass(18);
generatedTree.insert2pass(85);
generatedTree.insert2pass(43);
generatedTree.insert2pass(92);
generatedTree.insert2pass(15);
generatedTree.insert2pass(94);
generatedTree.insert2pass(96);
generatedTree.insert2pass(73);
generatedTree.insert2pass(90);
generatedTree.insert2pass(41);
generatedTree.insert2pass(87);
generatedTree.insert2pass(48);
------------------------------

└── 77
    ├── 25, 43
    │   ├── 15, 18
    │   ├── 41
    │   └── 48, 73
    └── 92
        ├── 85, 87, 90
        └── 94, 96

------------------------------

generatedTree.delete(15)
generatedTree.delete(18)

------------------------------

└── 77
    ├── 43
    │   ├── 25, 41
    │   └── 48, 73
    └── 92
        ├── 85, 87, 90
        └── 94, 96


------------------------------

END - TEST 120


START - TEST 121
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(55);
generatedTree.insert2pass(67);
generatedTree.insert2pass(62);
generatedTree.insert2pass(50);
generatedTree.insert2pass(37);
generatedTree.insert2pass(95);
generatedTree.insert2pass(96);
generatedTree.insert2pass(26);
generatedTree.insert2pass(75);
generatedTree.insert2pass(59);
generatedTree.insert2pass(85);
------------------------------

└── 50, 62, 95
    ├── 26, 37
    ├── 55, 59
    ├── 67, 75, 85
    └── 96

------------------------------

generatedTree.delete(67)

------------------------------

└── 50, 62, 95
    ├── 26, 37
    ├── 55, 59
    ├── 75, 85
    └── 96


------------------------------

END - TEST 121


START - TEST 122
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(59);
generatedTree.insert2pass(31);
generatedTree.insert2pass(25);
generatedTree.insert2pass(11);
generatedTree.insert2pass(78);
generatedTree.insert2pass(87);
generatedTree.insert2pass(70);
generatedTree.insert2pass(89);
generatedTree.insert2pass(60);
generatedTree.insert2pass(51);
generatedTree.insert2pass(58);
generatedTree.insert2pass(43);
generatedTree.insert2pass(71);
------------------------------

└── 59
    ├── 25, 51
    │   ├── 11
    │   ├── 31, 43
    │   └── 58
    └── 70, 82
        ├── 60
        ├── 71, 78
        └── 87, 89

------------------------------

generatedTree.delete(70)
generatedTree.delete(87)

------------------------------

└── 59
    ├── 25, 51
    │   ├── 11
    │   ├── 31, 43
    │   └── 58
    └── 71, 82
        ├── 60
        ├── 78
        └── 89


------------------------------

END - TEST 122


START - TEST 123
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(65);
generatedTree.insert2pass(32);
generatedTree.insert2pass(34);
generatedTree.insert2pass(49);
generatedTree.insert2pass(76);
generatedTree.insert2pass(83);
generatedTree.insert2pass(66);
generatedTree.insert2pass(84);
generatedTree.insert2pass(20);
generatedTree.insert2pass(60);
generatedTree.insert2pass(33);
------------------------------

└── 34, 65, 76
    ├── 20, 32, 33
    ├── 49, 60
    ├── 66
    └── 83, 84

------------------------------

generatedTree.delete(65)
generatedTree.delete(83)
generatedTree.delete(33)

------------------------------

└── 34, 60, 76
    ├── 20, 32
    ├── 49
    ├── 66
    └── 84


------------------------------

END - TEST 123


START - TEST 124
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(36);
generatedTree.insert2pass(35);
generatedTree.insert2pass(87);
generatedTree.insert2pass(55);
generatedTree.insert2pass(47);
generatedTree.insert2pass(95);
generatedTree.insert2pass(21);
generatedTree.insert2pass(12);
generatedTree.insert2pass(19);
generatedTree.insert2pass(30);
generatedTree.insert2pass(40);
------------------------------

└── 21, 36, 62
    ├── 12, 19
    ├── 30, 35
    ├── 40, 47, 55
    └── 87, 95

------------------------------

generatedTree.delete(47)
generatedTree.delete(12)
generatedTree.delete(35)

------------------------------

└── 21, 36, 62
    ├── 19
    ├── 30
    ├── 40, 55
    └── 87, 95


------------------------------

END - TEST 124


START - TEST 125
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(73);
generatedTree.insert2pass(65);
generatedTree.insert2pass(74);
generatedTree.insert2pass(44);
generatedTree.insert2pass(49);
generatedTree.insert2pass(97);
generatedTree.insert2pass(31);
generatedTree.insert2pass(36);
generatedTree.insert2pass(94);
generatedTree.insert2pass(59);
generatedTree.insert2pass(28);
generatedTree.insert2pass(12);
generatedTree.insert2pass(35);
------------------------------

└── 49
    ├── 28, 36
    │   ├── 12
    │   ├── 31, 35
    │   └── 44
    └── 73
        ├── 59, 65
        └── 74, 94, 97

------------------------------

generatedTree.delete(65)
generatedTree.delete(59)
generatedTree.delete(74)

------------------------------

└── 36
    ├── 28
    │   ├── 12
    │   └── 31, 35
    └── 49, 94
        ├── 44
        ├── 73
        └── 97


------------------------------

END - TEST 125


START - TEST 126
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(87);
generatedTree.insert2pass(30);
generatedTree.insert2pass(28);
generatedTree.insert2pass(65);
generatedTree.insert2pass(61);
generatedTree.insert2pass(11);
generatedTree.insert2pass(41);
generatedTree.insert2pass(99);
generatedTree.insert2pass(19);
generatedTree.insert2pass(20);
generatedTree.insert2pass(39);
generatedTree.insert2pass(43);
generatedTree.insert2pass(26);
generatedTree.insert2pass(32);
generatedTree.insert2pass(52);
generatedTree.insert2pass(82);
------------------------------

└── 30
    ├── 19
    │   ├── 11
    │   └── 20, 26, 28
    └── 41, 61, 66
        ├── 32, 39
        ├── 43, 52
        ├── 65
        └── 82, 87, 99

------------------------------

generatedTree.delete(30)

------------------------------

└── 32
    ├── 19
    │   ├── 11
    │   └── 20, 26, 28
    └── 41, 61, 66
        ├── 39
        ├── 43, 52
        ├── 65
        └── 82, 87, 99


------------------------------

END - TEST 126


START - TEST 127
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(70);
generatedTree.insert2pass(67);
generatedTree.insert2pass(98);
generatedTree.insert2pass(36);
generatedTree.insert2pass(15);
generatedTree.insert2pass(63);
generatedTree.insert2pass(33);
generatedTree.insert2pass(18);
generatedTree.insert2pass(49);
generatedTree.insert2pass(82);
generatedTree.insert2pass(31);
generatedTree.insert2pass(34);
generatedTree.insert2pass(22);
generatedTree.insert2pass(94);
generatedTree.insert2pass(87);
generatedTree.insert2pass(62);
generatedTree.insert2pass(99);
generatedTree.insert2pass(56);
generatedTree.insert2pass(75);
generatedTree.insert2pass(26);
------------------------------

└── 36
    ├── 18, 33
    │   ├── 15
    │   ├── 22, 26, 31
    │   └── 34
    └── 63, 70, 94
        ├── 49, 56, 62
        ├── 67
        ├── 75, 82, 87
        └── 98, 99

------------------------------

generatedTree.delete(33)

------------------------------

└── 36
    ├── 18, 31
    │   ├── 15
    │   ├── 22, 26
    │   └── 34
    └── 63, 70, 94
        ├── 49, 56, 62
        ├── 67
        ├── 75, 82, 87
        └── 98, 99


------------------------------

END - TEST 127


START - TEST 128
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(79);
generatedTree.insert2pass(15);
generatedTree.insert2pass(21);
generatedTree.insert2pass(78);
generatedTree.insert2pass(41);
generatedTree.insert2pass(60);
generatedTree.insert2pass(53);
generatedTree.insert2pass(25);
generatedTree.insert2pass(14);
generatedTree.insert2pass(51);
generatedTree.insert2pass(34);
generatedTree.insert2pass(70);
generatedTree.insert2pass(29);
generatedTree.insert2pass(82);
generatedTree.insert2pass(44);
generatedTree.insert2pass(89);
generatedTree.insert2pass(72);
------------------------------

└── 41
    ├── 19, 25
    │   ├── 14, 15
    │   ├── 21
    │   └── 29, 34
    └── 53, 78
        ├── 44, 51
        ├── 60, 70, 72
        └── 79, 82, 89

------------------------------

generatedTree.delete(70)
generatedTree.delete(60)
generatedTree.delete(21)

------------------------------

└── 41
    ├── 15, 25
    │   ├── 14
    │   ├── 19
    │   └── 29, 34
    └── 53, 78
        ├── 44, 51
        ├── 72
        └── 79, 82, 89


------------------------------

END - TEST 128


START - TEST 129
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(57);
generatedTree.insert2pass(83);
generatedTree.insert2pass(51);
generatedTree.insert2pass(44);
generatedTree.insert2pass(79);
generatedTree.insert2pass(18);
generatedTree.insert2pass(53);
generatedTree.insert2pass(47);
generatedTree.insert2pass(11);
------------------------------

└── 44, 57
    ├── 11, 18
    ├── 47, 51, 53
    └── 79, 83

------------------------------

generatedTree.delete(44)

------------------------------

└── 18, 57
    ├── 11
    ├── 47, 51, 53
    └── 79, 83


------------------------------

END - TEST 129


START - TEST 130
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(40);
generatedTree.insert2pass(14);
generatedTree.insert2pass(75);
generatedTree.insert2pass(52);
generatedTree.insert2pass(97);
generatedTree.insert2pass(39);
generatedTree.insert2pass(43);
generatedTree.insert2pass(94);
generatedTree.insert2pass(44);
------------------------------

└── 40, 75
    ├── 14, 39
    ├── 43, 44, 52
    └── 94, 97

------------------------------

generatedTree.delete(40)
generatedTree.delete(97)

------------------------------

└── 39, 75
    ├── 14
    ├── 43, 44, 52
    └── 94


------------------------------

END - TEST 130


START - TEST 131
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(84);
generatedTree.insert2pass(53);
generatedTree.insert2pass(78);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(11);
generatedTree.insert2pass(50);
generatedTree.insert2pass(21);
generatedTree.insert2pass(79);
generatedTree.insert2pass(13);
generatedTree.insert2pass(81);
------------------------------

└── 26, 53, 78
    ├── 11, 13, 21
    ├── 36, 50
    ├── 61
    └── 79, 81, 84

------------------------------

generatedTree.delete(21)

------------------------------

└── 26, 53, 78
    ├── 11, 13
    ├── 36, 50
    ├── 61
    └── 79, 81, 84


------------------------------

END - TEST 131


START - TEST 132
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(79);
generatedTree.insert2pass(58);
generatedTree.insert2pass(97);
generatedTree.insert2pass(73);
generatedTree.insert2pass(36);
generatedTree.insert2pass(61);
generatedTree.insert2pass(20);
------------------------------

└── 58, 66
    ├── 20, 36
    ├── 61
    └── 73, 79, 97

------------------------------

generatedTree.delete(36)
generatedTree.delete(58)

------------------------------

└── 66
    ├── 20, 61
    └── 73, 79, 97


------------------------------

END - TEST 132


START - TEST 133
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(47);
generatedTree.insert2pass(45);
generatedTree.insert2pass(76);
generatedTree.insert2pass(75);
generatedTree.insert2pass(92);
generatedTree.insert2pass(58);
generatedTree.insert2pass(21);
generatedTree.insert2pass(14);
generatedTree.insert2pass(40);
generatedTree.insert2pass(41);
generatedTree.insert2pass(15);
generatedTree.insert2pass(69);
generatedTree.insert2pass(49);
generatedTree.insert2pass(37);
generatedTree.insert2pass(68);
generatedTree.insert2pass(95);
generatedTree.insert2pass(29);
------------------------------

└── 45
    ├── 21, 40
    │   ├── 14, 15
    │   ├── 29, 37, 38
    │   └── 41
    └── 58, 75
        ├── 47, 49
        ├── 68, 69
        └── 76, 92, 95

------------------------------

generatedTree.delete(76)
generatedTree.delete(15)
generatedTree.delete(38)

------------------------------

└── 45
    ├── 21, 40
    │   ├── 14
    │   ├── 29, 37
    │   └── 41
    └── 58, 75
        ├── 47, 49
        ├── 68, 69
        └── 92, 95


------------------------------

END - TEST 133


START - TEST 134
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(15);
generatedTree.insert2pass(57);
generatedTree.insert2pass(98);
generatedTree.insert2pass(80);
generatedTree.insert2pass(92);
generatedTree.insert2pass(25);
generatedTree.insert2pass(83);
generatedTree.insert2pass(50);
generatedTree.insert2pass(63);
generatedTree.insert2pass(45);
generatedTree.insert2pass(39);
generatedTree.insert2pass(66);
generatedTree.insert2pass(59);
generatedTree.insert2pass(40);
generatedTree.insert2pass(13);
generatedTree.insert2pass(68);
generatedTree.insert2pass(26);
------------------------------

└── 57
    ├── 25, 45
    │   ├── 13, 15
    │   ├── 26, 39, 40
    │   └── 50
    └── 63, 80, 92
        ├── 59
        ├── 66, 68
        ├── 83
        └── 98

------------------------------

generatedTree.delete(66)
generatedTree.delete(68)

------------------------------

└── 57
    ├── 25, 45
    │   ├── 13, 15
    │   ├── 26, 39, 40
    │   └── 50
    └── 80, 92
        ├── 59, 63
        ├── 83
        └── 98


------------------------------

END - TEST 134


START - TEST 135
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(40);
generatedTree.insert2pass(80);
generatedTree.insert2pass(54);
generatedTree.insert2pass(59);
generatedTree.insert2pass(24);
generatedTree.insert2pass(26);
generatedTree.insert2pass(93);
------------------------------

└── 54, 74
    ├── 24, 26, 40
    ├── 59
    └── 80, 93

------------------------------

generatedTree.delete(93)
generatedTree.delete(80)
generatedTree.delete(26)

------------------------------

└── 54
    ├── 24, 40
    └── 59, 74


------------------------------

END - TEST 135


START - TEST 136
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(50);
generatedTree.insert2pass(90);
generatedTree.insert2pass(39);
generatedTree.insert2pass(51);
generatedTree.insert2pass(97);
generatedTree.insert2pass(16);
generatedTree.insert2pass(58);
generatedTree.insert2pass(37);
generatedTree.insert2pass(68);
generatedTree.insert2pass(69);
------------------------------

└── 50
    ├── 17
    │   ├── 16
    │   └── 37, 39
    └── 58, 90
        ├── 51
        ├── 68, 69
        └── 97

------------------------------

generatedTree.delete(69)
generatedTree.delete(17)
generatedTree.delete(39)

------------------------------

└── 58
    ├── 50
    │   ├── 16, 37
    │   └── 51
    └── 90
        ├── 68
        └── 97


------------------------------

END - TEST 136


START - TEST 137
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(52);
generatedTree.insert2pass(44);
generatedTree.insert2pass(93);
generatedTree.insert2pass(58);
generatedTree.insert2pass(68);
generatedTree.insert2pass(22);
generatedTree.insert2pass(82);
generatedTree.insert2pass(73);
generatedTree.insert2pass(16);
generatedTree.insert2pass(85);
generatedTree.insert2pass(20);
generatedTree.insert2pass(87);
generatedTree.insert2pass(51);
generatedTree.insert2pass(29);
generatedTree.insert2pass(48);
generatedTree.insert2pass(24);
generatedTree.insert2pass(33);
generatedTree.insert2pass(77);
------------------------------

└── 58
    ├── 21, 24, 44
    │   ├── 16, 20
    │   ├── 22
    │   ├── 29, 33
    │   └── 48, 51, 52
    └── 82
        ├── 68, 73, 77
        └── 85, 87, 93

------------------------------

generatedTree.delete(93)

------------------------------

└── 44
    ├── 21, 24
    │   ├── 16, 20
    │   ├── 22
    │   └── 29, 33
    └── 58, 82
        ├── 48, 51, 52
        ├── 68, 73, 77
        └── 85, 87


------------------------------

END - TEST 137


START - TEST 138
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(65);
generatedTree.insert2pass(12);
generatedTree.insert2pass(40);
generatedTree.insert2pass(34);
generatedTree.insert2pass(89);
generatedTree.insert2pass(61);
generatedTree.insert2pass(80);
generatedTree.insert2pass(26);
generatedTree.insert2pass(88);
generatedTree.insert2pass(69);
------------------------------

└── 34, 65, 89
    ├── 12, 26
    ├── 40, 61
    ├── 69, 80, 88
    └── 94

------------------------------

generatedTree.delete(88)
generatedTree.delete(26)
generatedTree.delete(80)

------------------------------

└── 34, 65, 89
    ├── 12
    ├── 40, 61
    ├── 69
    └── 94


------------------------------

END - TEST 138


START - TEST 139
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(45);
generatedTree.insert2pass(53);
generatedTree.insert2pass(46);
generatedTree.insert2pass(65);
generatedTree.insert2pass(86);
generatedTree.insert2pass(14);
generatedTree.insert2pass(38);
generatedTree.insert2pass(76);
generatedTree.insert2pass(58);
generatedTree.insert2pass(41);
generatedTree.insert2pass(48);
generatedTree.insert2pass(52);
generatedTree.insert2pass(43);
generatedTree.insert2pass(82);
generatedTree.insert2pass(75);
generatedTree.insert2pass(78);
generatedTree.insert2pass(56);
------------------------------

└── 46
    ├── 38
    │   ├── 14
    │   └── 41, 43, 45
    └── 53, 65, 82
        ├── 48, 52
        ├── 56, 58
        ├── 75, 76, 78
        └── 86

------------------------------

generatedTree.delete(41)
generatedTree.delete(75)
generatedTree.delete(65)

------------------------------

└── 53
    ├── 38, 46
    │   ├── 14
    │   ├── 43, 45
    │   └── 48, 52
    └── 58, 82
        ├── 56
        ├── 76, 78
        └── 86


------------------------------

END - TEST 139


START - TEST 140
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(12);
generatedTree.insert2pass(74);
generatedTree.insert2pass(69);
generatedTree.insert2pass(16);
generatedTree.insert2pass(79);
generatedTree.insert2pass(57);
generatedTree.insert2pass(45);
generatedTree.insert2pass(92);
------------------------------

└── 16, 69
    ├── 12
    ├── 45, 57
    └── 74, 79, 92

------------------------------

generatedTree.delete(16)
generatedTree.delete(57)

------------------------------

└── 45, 74
    ├── 12
    ├── 69
    └── 79, 92


------------------------------

END - TEST 140


START - TEST 141
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(84);
generatedTree.insert2pass(37);
generatedTree.insert2pass(41);
generatedTree.insert2pass(55);
generatedTree.insert2pass(73);
generatedTree.insert2pass(40);
generatedTree.insert2pass(76);
generatedTree.insert2pass(71);
generatedTree.insert2pass(44);
generatedTree.insert2pass(63);
generatedTree.insert2pass(88);
generatedTree.insert2pass(81);
generatedTree.insert2pass(19);
generatedTree.insert2pass(77);
------------------------------

└── 55
    ├── 41
    │   ├── 19, 37, 40
    │   └── 44
    └── 73, 84
        ├── 63, 71
        ├── 76, 77, 81
        └── 88

------------------------------

generatedTree.delete(44)
generatedTree.delete(81)
generatedTree.delete(71)

------------------------------

└── 55
    ├── 40
    │   ├── 19, 37
    │   └── 41
    └── 73, 84
        ├── 63
        ├── 76, 77
        └── 88


------------------------------

END - TEST 141


START - TEST 142
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(93);
generatedTree.insert2pass(69);
generatedTree.insert2pass(70);
generatedTree.insert2pass(74);
generatedTree.insert2pass(36);
generatedTree.insert2pass(49);
generatedTree.insert2pass(66);
generatedTree.insert2pass(63);
generatedTree.insert2pass(80);
generatedTree.insert2pass(72);
generatedTree.insert2pass(43);
generatedTree.insert2pass(24);
generatedTree.insert2pass(28);
generatedTree.insert2pass(58);
------------------------------

└── 70
    ├── 36, 49, 66
    │   ├── 24, 28
    │   ├── 43
    │   ├── 58, 63
    │   └── 69
    └── 80
        ├── 72, 74
        └── 93

------------------------------

generatedTree.delete(80)
generatedTree.delete(63)
generatedTree.delete(36)

------------------------------

└── 66
    ├── 28, 49
    │   ├── 24
    │   ├── 43
    │   └── 58
    └── 70, 74
        ├── 69
        ├── 72
        └── 93


------------------------------

END - TEST 142


START - TEST 143
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(35);
generatedTree.insert2pass(68);
generatedTree.insert2pass(84);
generatedTree.insert2pass(70);
generatedTree.insert2pass(17);
generatedTree.insert2pass(65);
generatedTree.insert2pass(87);
generatedTree.insert2pass(34);
generatedTree.insert2pass(50);
generatedTree.insert2pass(56);
generatedTree.insert2pass(30);
generatedTree.insert2pass(66);
generatedTree.insert2pass(37);
------------------------------

└── 65
    ├── 24, 35
    │   ├── 17
    │   ├── 30, 34
    │   └── 37, 50, 56
    └── 70
        ├── 66, 68
        └── 84, 87

------------------------------

generatedTree.delete(17)
generatedTree.delete(56)
generatedTree.delete(50)

------------------------------

└── 65
    ├── 30, 35
    │   ├── 24
    │   ├── 34
    │   └── 37
    └── 70
        ├── 66, 68
        └── 84, 87


------------------------------

END - TEST 143


START - TEST 144
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(17);
generatedTree.insert2pass(75);
generatedTree.insert2pass(28);
generatedTree.insert2pass(27);
generatedTree.insert2pass(25);
generatedTree.insert2pass(50);
------------------------------

└── 28
    ├── 17, 25, 27
    └── 50, 75

------------------------------

generatedTree.delete(50)
generatedTree.delete(28)
generatedTree.delete(17)

------------------------------

└── 27
    ├── 25
    └── 75


------------------------------

END - TEST 144


START - TEST 145
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(64);
generatedTree.insert2pass(90);
generatedTree.insert2pass(34);
generatedTree.insert2pass(83);
generatedTree.insert2pass(72);
generatedTree.insert2pass(50);
generatedTree.insert2pass(30);
generatedTree.insert2pass(93);
generatedTree.insert2pass(77);
generatedTree.insert2pass(92);
generatedTree.insert2pass(73);
------------------------------

└── 64, 83
    ├── 30, 34, 50
    ├── 72, 73, 77
    └── 90, 92, 93

------------------------------

generatedTree.delete(83)

------------------------------

└── 64, 77
    ├── 30, 34, 50
    ├── 72, 73
    └── 90, 92, 93


------------------------------

END - TEST 145


START - TEST 146
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(63);
generatedTree.insert2pass(90);
generatedTree.insert2pass(48);
generatedTree.insert2pass(92);
generatedTree.insert2pass(78);
generatedTree.insert2pass(50);
generatedTree.insert2pass(86);
------------------------------

└── 63, 90
    ├── 32, 48, 50
    ├── 78, 86
    └── 92

------------------------------

generatedTree.delete(63)
generatedTree.delete(48)

------------------------------

└── 50, 90
    ├── 32
    ├── 78, 86
    └── 92


------------------------------

END - TEST 146


START - TEST 147
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(11);
generatedTree.insert2pass(27);
generatedTree.insert2pass(54);
generatedTree.insert2pass(31);
generatedTree.insert2pass(81);
generatedTree.insert2pass(69);
generatedTree.insert2pass(68);
generatedTree.insert2pass(57);
generatedTree.insert2pass(71);
generatedTree.insert2pass(63);
generatedTree.insert2pass(66);
generatedTree.insert2pass(91);
generatedTree.insert2pass(16);
generatedTree.insert2pass(85);
------------------------------

└── 54
    ├── 27
    │   ├── 11, 16
    │   └── 31
    └── 63, 69, 81
        ├── 57
        ├── 66, 68
        ├── 71
        └── 85, 91

------------------------------

generatedTree.delete(68)

------------------------------

└── 54
    ├── 27
    │   ├── 11, 16
    │   └── 31
    └── 63, 69, 81
        ├── 57
        ├── 66
        ├── 71
        └── 85, 91


------------------------------

END - TEST 147


START - TEST 148
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(68);
generatedTree.insert2pass(51);
generatedTree.insert2pass(48);
generatedTree.insert2pass(96);
generatedTree.insert2pass(20);
generatedTree.insert2pass(54);
generatedTree.insert2pass(79);
generatedTree.insert2pass(98);
generatedTree.insert2pass(32);
generatedTree.insert2pass(78);
generatedTree.insert2pass(97);
generatedTree.insert2pass(49);
generatedTree.insert2pass(52);
generatedTree.insert2pass(42);
generatedTree.insert2pass(26);
generatedTree.insert2pass(60);
------------------------------

└── 68
    ├── 32, 51
    │   ├── 20, 26
    │   ├── 42, 48, 49
    │   └── 52, 54, 60
    └── 96
        ├── 78, 79
        └── 97, 98

------------------------------

generatedTree.delete(60)
generatedTree.delete(52)

------------------------------

└── 68
    ├── 32, 51
    │   ├── 20, 26
    │   ├── 42, 48, 49
    │   └── 54
    └── 96
        ├── 78, 79
        └── 97, 98


------------------------------

END - TEST 148


START - TEST 149
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(94);
generatedTree.insert2pass(17);
generatedTree.insert2pass(53);
generatedTree.insert2pass(68);
generatedTree.insert2pass(75);
generatedTree.insert2pass(26);
generatedTree.insert2pass(49);
generatedTree.insert2pass(16);
------------------------------

└── 47, 68
    ├── 16, 17, 26
    ├── 49, 53
    └── 75, 94

------------------------------

generatedTree.delete(47)
generatedTree.delete(68)
generatedTree.delete(17)

------------------------------

└── 26, 53
    ├── 16
    ├── 49
    └── 75, 94


------------------------------

END - TEST 149


START - TEST 150
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(13);
generatedTree.insert2pass(47);
generatedTree.insert2pass(20);
generatedTree.insert2pass(58);
generatedTree.insert2pass(51);
generatedTree.insert2pass(48);
generatedTree.insert2pass(21);
------------------------------

└── 47, 58
    ├── 13, 20, 21
    ├── 48, 51
    └── 63

------------------------------

generatedTree.delete(13)

------------------------------

└── 47, 58
    ├── 20, 21
    ├── 48, 51
    └── 63


------------------------------

END - TEST 150


START - TEST 151
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(74);
generatedTree.insert2pass(45);
generatedTree.insert2pass(81);
generatedTree.insert2pass(87);
generatedTree.insert2pass(11);
generatedTree.insert2pass(71);
generatedTree.insert2pass(98);
------------------------------

└── 74
    ├── 11, 45, 71
    └── 81, 87, 98

------------------------------

generatedTree.delete(74)
generatedTree.delete(45)

------------------------------

└── 71
    ├── 11
    └── 81, 87, 98


------------------------------

END - TEST 151


START - TEST 152
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(47);
generatedTree.insert2pass(51);
generatedTree.insert2pass(54);
generatedTree.insert2pass(62);
generatedTree.insert2pass(28);
generatedTree.insert2pass(88);
generatedTree.insert2pass(29);
generatedTree.insert2pass(27);
generatedTree.insert2pass(58);
generatedTree.insert2pass(82);
generatedTree.insert2pass(13);
------------------------------

└── 29, 51, 62
    ├── 13, 27, 28
    ├── 47
    ├── 54, 58
    └── 82, 88

------------------------------

generatedTree.delete(54)

------------------------------

└── 29, 51, 62
    ├── 13, 27, 28
    ├── 47
    ├── 58
    └── 82, 88


------------------------------

END - TEST 152


START - TEST 153
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(19);
generatedTree.insert2pass(11);
generatedTree.insert2pass(37);
generatedTree.insert2pass(65);
generatedTree.insert2pass(43);
generatedTree.insert2pass(69);
generatedTree.insert2pass(50);
generatedTree.insert2pass(89);
------------------------------

└── 19, 43, 65
    ├── 11
    ├── 37
    ├── 50
    └── 69, 89

------------------------------

generatedTree.delete(69)
generatedTree.delete(37)

------------------------------

└── 43, 65
    ├── 11, 19
    ├── 50
    └── 89


------------------------------

END - TEST 153


START - TEST 154
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(26);
generatedTree.insert2pass(71);
generatedTree.insert2pass(47);
generatedTree.insert2pass(22);
generatedTree.insert2pass(92);
generatedTree.insert2pass(25);
generatedTree.insert2pass(32);
generatedTree.insert2pass(66);
generatedTree.insert2pass(16);
generatedTree.insert2pass(37);
generatedTree.insert2pass(61);
generatedTree.insert2pass(83);
generatedTree.insert2pass(90);
generatedTree.insert2pass(62);
generatedTree.insert2pass(44);
generatedTree.insert2pass(98);
------------------------------

└── 47
    ├── 25, 32
    │   ├── 16, 22
    │   ├── 26
    │   └── 37, 44
    └── 71, 90
        ├── 61, 62, 66
        ├── 83
        └── 92, 98

------------------------------

generatedTree.delete(71)

------------------------------

└── 47
    ├── 25, 32
    │   ├── 16, 22
    │   ├── 26
    │   └── 37, 44
    └── 66, 90
        ├── 61, 62
        ├── 83
        └── 92, 98


------------------------------

END - TEST 154


START - TEST 155
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(77);
generatedTree.insert2pass(78);
generatedTree.insert2pass(80);
generatedTree.insert2pass(62);
generatedTree.insert2pass(91);
generatedTree.insert2pass(92);
generatedTree.insert2pass(35);
generatedTree.insert2pass(74);
generatedTree.insert2pass(72);
generatedTree.insert2pass(32);
generatedTree.insert2pass(44);
generatedTree.insert2pass(95);
generatedTree.insert2pass(58);
generatedTree.insert2pass(45);
generatedTree.insert2pass(79);
generatedTree.insert2pass(31);
generatedTree.insert2pass(65);
generatedTree.insert2pass(54);
------------------------------

└── 62, 78
    ├── 35, 45
    │   ├── 31, 32
    │   ├── 44
    │   └── 54, 58
    ├── 74
    │   ├── 65, 72
    │   └── 77
    └── 91
        ├── 79, 80
        └── 92, 95

------------------------------

generatedTree.delete(44)
generatedTree.delete(58)
generatedTree.delete(74)

------------------------------

└── 45, 78
    ├── 32
    │   ├── 31
    │   └── 35
    ├── 62, 72
    │   ├── 54
    │   ├── 65
    │   └── 77
    └── 91
        ├── 79, 80
        └── 92, 95


------------------------------

END - TEST 155


START - TEST 156
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(62);
generatedTree.insert2pass(75);
generatedTree.insert2pass(59);
generatedTree.insert2pass(80);
generatedTree.insert2pass(37);
------------------------------

└── 62
    ├── 37, 59
    └── 75, 80

------------------------------

generatedTree.delete(62)
generatedTree.delete(59)
generatedTree.delete(75)

------------------------------

└── 37, 80


------------------------------

END - TEST 156


START - TEST 157
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(30);
generatedTree.insert2pass(20);
generatedTree.insert2pass(61);
generatedTree.insert2pass(74);
generatedTree.insert2pass(32);
generatedTree.insert2pass(21);
generatedTree.insert2pass(91);
generatedTree.insert2pass(71);
generatedTree.insert2pass(80);
generatedTree.insert2pass(44);
generatedTree.insert2pass(58);
generatedTree.insert2pass(53);
generatedTree.insert2pass(87);
generatedTree.insert2pass(98);
generatedTree.insert2pass(86);
generatedTree.insert2pass(18);
------------------------------

└── 61
    ├── 30, 44
    │   ├── 18, 20, 21
    │   ├── 32
    │   └── 53, 58, 59
    └── 74, 87
        ├── 71
        ├── 80, 86
        └── 91, 98

------------------------------

generatedTree.delete(71)
generatedTree.delete(80)
generatedTree.delete(53)

------------------------------

└── 61
    ├── 30, 44
    │   ├── 18, 20, 21
    │   ├── 32
    │   └── 58, 59
    └── 87
        ├── 74, 86
        └── 91, 98


------------------------------

END - TEST 157


START - TEST 158
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(79);
generatedTree.insert2pass(17);
generatedTree.insert2pass(15);
generatedTree.insert2pass(26);
generatedTree.insert2pass(37);
generatedTree.insert2pass(30);
generatedTree.insert2pass(38);
generatedTree.insert2pass(33);
------------------------------

└── 17, 37
    ├── 15
    ├── 26, 30, 33
    └── 38, 79

------------------------------

generatedTree.delete(37)

------------------------------

└── 17, 33
    ├── 15
    ├── 26, 30
    └── 38, 79


------------------------------

END - TEST 158


START - TEST 159
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(96);
generatedTree.insert2pass(59);
generatedTree.insert2pass(25);
generatedTree.insert2pass(14);
generatedTree.insert2pass(21);
generatedTree.insert2pass(11);
generatedTree.insert2pass(43);
generatedTree.insert2pass(16);
generatedTree.insert2pass(26);
generatedTree.insert2pass(53);
generatedTree.insert2pass(29);
generatedTree.insert2pass(82);
generatedTree.insert2pass(23);
generatedTree.insert2pass(97);
generatedTree.insert2pass(61);
generatedTree.insert2pass(33);
generatedTree.insert2pass(20);
generatedTree.insert2pass(48);
------------------------------

└── 26
    ├── 14, 21
    │   ├── 11
    │   ├── 16, 20
    │   └── 23, 25
    └── 43, 59, 96
        ├── 29, 33
        ├── 48, 53
        ├── 61, 82
        └── 97

------------------------------

generatedTree.delete(43)
generatedTree.delete(97)

------------------------------

└── 26
    ├── 14, 21
    │   ├── 11
    │   ├── 16, 20
    │   └── 23, 25
    └── 33, 59, 82
        ├── 29
        ├── 48, 53
        ├── 61
        └── 96


------------------------------

END - TEST 159


START - TEST 160
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(81);
generatedTree.insert2pass(74);
generatedTree.insert2pass(34);
generatedTree.insert2pass(73);
generatedTree.insert2pass(46);
generatedTree.insert2pass(47);
generatedTree.insert2pass(57);
generatedTree.insert2pass(97);
generatedTree.insert2pass(85);
generatedTree.insert2pass(43);
generatedTree.insert2pass(17);
generatedTree.insert2pass(96);
generatedTree.insert2pass(66);
generatedTree.insert2pass(89);
generatedTree.insert2pass(12);
generatedTree.insert2pass(16);
generatedTree.insert2pass(36);
generatedTree.insert2pass(75);
------------------------------

└── 73
    ├── 34, 46
    │   ├── 12, 16, 17
    │   ├── 36, 43
    │   └── 47, 57, 66
    └── 81, 85
        ├── 74, 75
        ├── 83
        └── 89, 96, 97

------------------------------

generatedTree.delete(57)

------------------------------

└── 73
    ├── 34, 46
    │   ├── 12, 16, 17
    │   ├── 36, 43
    │   └── 47, 66
    └── 81, 85
        ├── 74, 75
        ├── 83
        └── 89, 96, 97


------------------------------

END - TEST 160


START - TEST 161
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(73);
generatedTree.insert2pass(42);
generatedTree.insert2pass(84);
generatedTree.insert2pass(79);
------------------------------

└── 42
    ├── 37
    └── 73, 79, 84

------------------------------

generatedTree.delete(84)

------------------------------

└── 42
    ├── 37
    └── 73, 79


------------------------------

END - TEST 161


START - TEST 162
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(65);
generatedTree.insert2pass(32);
generatedTree.insert2pass(95);
generatedTree.insert2pass(84);
generatedTree.insert2pass(57);
------------------------------

└── 46, 84
    ├── 32
    ├── 57, 65
    └── 95

------------------------------

generatedTree.delete(84)
generatedTree.delete(95)

------------------------------

└── 46
    ├── 32
    └── 57, 65


------------------------------

END - TEST 162


START - TEST 163
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(37);
generatedTree.insert2pass(46);
generatedTree.insert2pass(43);
generatedTree.insert2pass(93);
generatedTree.insert2pass(32);
generatedTree.insert2pass(87);
generatedTree.insert2pass(52);
generatedTree.insert2pass(95);
generatedTree.insert2pass(49);
generatedTree.insert2pass(83);
generatedTree.insert2pass(22);
generatedTree.insert2pass(75);
generatedTree.insert2pass(61);
generatedTree.insert2pass(71);
generatedTree.insert2pass(78);
generatedTree.insert2pass(42);
generatedTree.insert2pass(57);
------------------------------

└── 49
    ├── 32, 43
    │   ├── 22
    │   ├── 37, 42
    │   └── 46
    └── 61, 75, 87
        ├── 52, 57
        ├── 71
        ├── 78, 83
        └── 93, 95

------------------------------

generatedTree.delete(83)

------------------------------

└── 49
    ├── 32, 43
    │   ├── 22
    │   ├── 37, 42
    │   └── 46
    └── 61, 75, 87
        ├── 52, 57
        ├── 71
        ├── 78
        └── 93, 95


------------------------------

END - TEST 163


START - TEST 164
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(88);
generatedTree.insert2pass(11);
generatedTree.insert2pass(22);
generatedTree.insert2pass(46);
generatedTree.insert2pass(33);
generatedTree.insert2pass(23);
generatedTree.insert2pass(67);
generatedTree.insert2pass(94);
generatedTree.insert2pass(47);
generatedTree.insert2pass(89);
generatedTree.insert2pass(74);
generatedTree.insert2pass(37);
generatedTree.insert2pass(30);
generatedTree.insert2pass(95);
generatedTree.insert2pass(99);
generatedTree.insert2pass(64);
------------------------------

└── 46
    ├── 22, 33
    │   ├── 11
    │   ├── 23, 30
    │   └── 37
    └── 67, 88, 94
        ├── 47, 64
        ├── 74
        ├── 89
        └── 95, 99

------------------------------

generatedTree.delete(89)

------------------------------

└── 46
    ├── 22, 33
    │   ├── 11
    │   ├── 23, 30
    │   └── 37
    └── 67, 88, 95
        ├── 47, 64
        ├── 74
        ├── 94
        └── 99


------------------------------

END - TEST 164


START - TEST 165
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(50);
generatedTree.insert2pass(77);
generatedTree.insert2pass(47);
generatedTree.insert2pass(34);
generatedTree.insert2pass(46);
generatedTree.insert2pass(82);
generatedTree.insert2pass(22);
generatedTree.insert2pass(83);
generatedTree.insert2pass(91);
generatedTree.insert2pass(24);
generatedTree.insert2pass(55);
generatedTree.insert2pass(38);
generatedTree.insert2pass(80);
generatedTree.insert2pass(37);
generatedTree.insert2pass(72);
generatedTree.insert2pass(61);
generatedTree.insert2pass(33);
------------------------------

└── 50
    ├── 24, 37, 46
    │   ├── 22
    │   ├── 33, 34
    │   ├── 38
    │   └── 47
    └── 77, 82
        ├── 55, 61, 72
        ├── 80
        └── 83, 91

------------------------------

generatedTree.delete(72)
generatedTree.delete(38)

------------------------------

└── 50
    ├── 24, 34, 46
    │   ├── 22
    │   ├── 33
    │   ├── 37
    │   └── 47
    └── 77, 82
        ├── 55, 61
        ├── 80
        └── 83, 91


------------------------------

END - TEST 165


START - TEST 166
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(63);
generatedTree.insert2pass(45);
generatedTree.insert2pass(39);
generatedTree.insert2pass(96);
generatedTree.insert2pass(17);
generatedTree.insert2pass(58);
generatedTree.insert2pass(21);
generatedTree.insert2pass(85);
generatedTree.insert2pass(60);
generatedTree.insert2pass(83);
generatedTree.insert2pass(84);
generatedTree.insert2pass(66);
generatedTree.insert2pass(53);
generatedTree.insert2pass(13);
------------------------------

└── 63
    ├── 21, 45
    │   ├── 13, 17
    │   ├── 39
    │   └── 53, 58, 60
    └── 85
        ├── 66, 83, 84
        └── 96

------------------------------

generatedTree.delete(53)
generatedTree.delete(63)
generatedTree.delete(96)

------------------------------

└── 45
    ├── 21
    │   ├── 13, 17
    │   └── 39
    └── 60, 84
        ├── 58
        ├── 66, 83
        └── 85


------------------------------

END - TEST 166


START - TEST 167
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(27);
generatedTree.insert2pass(65);
generatedTree.insert2pass(79);
generatedTree.insert2pass(89);
generatedTree.insert2pass(57);
generatedTree.insert2pass(83);
generatedTree.insert2pass(63);
generatedTree.insert2pass(43);
generatedTree.insert2pass(87);
generatedTree.insert2pass(58);
generatedTree.insert2pass(21);
generatedTree.insert2pass(75);
generatedTree.insert2pass(11);
generatedTree.insert2pass(40);
generatedTree.insert2pass(45);
generatedTree.insert2pass(39);
generatedTree.insert2pass(15);
------------------------------

└── 65
    ├── 27, 43, 57
    │   ├── 11, 15, 21
    │   ├── 39, 40
    │   ├── 45
    │   └── 58, 63
    └── 83
        ├── 75, 79
        └── 87, 89

------------------------------

generatedTree.delete(45)
generatedTree.delete(15)
generatedTree.delete(40)

------------------------------

└── 65
    ├── 27, 57
    │   ├── 11, 21
    │   ├── 39, 43
    │   └── 58, 63
    └── 83
        ├── 75, 79
        └── 87, 89


------------------------------

END - TEST 167


START - TEST 168
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(46);
generatedTree.insert2pass(86);
generatedTree.insert2pass(59);
generatedTree.insert2pass(29);
generatedTree.insert2pass(55);
generatedTree.insert2pass(77);
------------------------------

└── 59
    ├── 29, 46, 55
    └── 77, 86

------------------------------

generatedTree.delete(29)

------------------------------

└── 59
    ├── 46, 55
    └── 77, 86


------------------------------

END - TEST 168


START - TEST 169
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(90);
generatedTree.insert2pass(38);
generatedTree.insert2pass(65);
generatedTree.insert2pass(67);
generatedTree.insert2pass(83);
------------------------------

└── 65, 90
    ├── 38
    ├── 67, 83
    └── 94

------------------------------

generatedTree.delete(90)
generatedTree.delete(65)

------------------------------

└── 83
    ├── 38, 67
    └── 94


------------------------------

END - TEST 169


START - TEST 170
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(53);
generatedTree.insert2pass(17);
generatedTree.insert2pass(49);
generatedTree.insert2pass(86);
generatedTree.insert2pass(33);
generatedTree.insert2pass(94);
generatedTree.insert2pass(93);
generatedTree.insert2pass(59);
generatedTree.insert2pass(75);
generatedTree.insert2pass(40);
generatedTree.insert2pass(80);
------------------------------

└── 53
    ├── 33
    │   ├── 17
    │   └── 40, 49
    └── 75, 90
        ├── 59
        ├── 80, 86
        └── 93, 94

------------------------------

generatedTree.delete(49)
generatedTree.delete(94)
generatedTree.delete(59)

------------------------------

└── 53
    ├── 33
    │   ├── 17
    │   └── 40
    └── 80, 90
        ├── 75
        ├── 86
        └── 93


------------------------------

END - TEST 170


START - TEST 171
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(89);
generatedTree.insert2pass(67);
generatedTree.insert2pass(33);
generatedTree.insert2pass(69);
generatedTree.insert2pass(64);
generatedTree.insert2pass(75);
generatedTree.insert2pass(30);
generatedTree.insert2pass(49);
------------------------------

└── 33, 67
    ├── 30
    ├── 49, 64
    └── 69, 75, 89

------------------------------

generatedTree.delete(67)
generatedTree.delete(89)
generatedTree.delete(33)

------------------------------

└── 64
    ├── 30, 49
    └── 69, 75


------------------------------

END - TEST 171


START - TEST 172
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(90);
generatedTree.insert2pass(63);
generatedTree.insert2pass(67);
generatedTree.insert2pass(79);
------------------------------

└── 83
    ├── 63, 67, 79
    └── 90

------------------------------

generatedTree.delete(63)
generatedTree.delete(90)
generatedTree.delete(83)

------------------------------

└── 67, 79


------------------------------

END - TEST 172


START - TEST 173
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(94);
generatedTree.insert2pass(80);
generatedTree.insert2pass(58);
generatedTree.insert2pass(96);
generatedTree.insert2pass(62);
generatedTree.insert2pass(14);
generatedTree.insert2pass(12);
generatedTree.insert2pass(84);
generatedTree.insert2pass(75);
generatedTree.insert2pass(79);
generatedTree.insert2pass(48);
generatedTree.insert2pass(45);
------------------------------

└── 14, 58, 80
    ├── 12
    ├── 45, 48
    ├── 62, 75, 79
    └── 84, 94, 96

------------------------------

generatedTree.delete(80)
generatedTree.delete(58)

------------------------------

└── 14, 48, 79
    ├── 12
    ├── 45
    ├── 62, 75
    └── 84, 94, 96


------------------------------

END - TEST 173


START - TEST 174
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(21);
generatedTree.insert2pass(30);
generatedTree.insert2pass(77);
generatedTree.insert2pass(65);
generatedTree.insert2pass(33);
generatedTree.insert2pass(88);
generatedTree.insert2pass(84);
generatedTree.insert2pass(28);
generatedTree.insert2pass(89);
generatedTree.insert2pass(38);
generatedTree.insert2pass(79);
generatedTree.insert2pass(29);
generatedTree.insert2pass(98);
generatedTree.insert2pass(73);
generatedTree.insert2pass(81);
------------------------------

└── 65
    ├── 30
    │   ├── 21, 28, 29
    │   └── 33, 38
    └── 77, 84
        ├── 73
        ├── 79, 81
        └── 88, 89, 98

------------------------------

generatedTree.delete(38)
generatedTree.delete(29)
generatedTree.delete(81)

------------------------------

└── 65
    ├── 30
    │   ├── 21, 28
    │   └── 33
    └── 77, 84
        ├── 73
        ├── 79
        └── 88, 89, 98


------------------------------

END - TEST 174


START - TEST 175
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(90);
generatedTree.insert2pass(40);
generatedTree.insert2pass(68);
generatedTree.insert2pass(59);
generatedTree.insert2pass(18);
generatedTree.insert2pass(85);
generatedTree.insert2pass(72);
generatedTree.insert2pass(45);
generatedTree.insert2pass(17);
generatedTree.insert2pass(78);
generatedTree.insert2pass(33);
generatedTree.insert2pass(58);
generatedTree.insert2pass(73);
------------------------------

└── 40, 68, 85
    ├── 17, 18, 33
    ├── 45, 58, 59
    ├── 72, 73, 78
    └── 90

------------------------------

generatedTree.delete(33)
generatedTree.delete(58)

------------------------------

└── 40, 68, 85
    ├── 17, 18
    ├── 45, 59
    ├── 72, 73, 78
    └── 90


------------------------------

END - TEST 175


START - TEST 176
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(64);
generatedTree.insert2pass(26);
generatedTree.insert2pass(81);
generatedTree.insert2pass(59);
generatedTree.insert2pass(57);
generatedTree.insert2pass(74);
generatedTree.insert2pass(34);
generatedTree.insert2pass(31);
generatedTree.insert2pass(85);
generatedTree.insert2pass(78);
generatedTree.insert2pass(60);
generatedTree.insert2pass(97);
generatedTree.insert2pass(24);
generatedTree.insert2pass(95);
generatedTree.insert2pass(77);
generatedTree.insert2pass(39);
generatedTree.insert2pass(99);
------------------------------

└── 64
    ├── 31, 57
    │   ├── 24, 26
    │   ├── 34, 39
    │   └── 59, 60
    └── 81, 85
        ├── 74, 77, 78
        ├── 83
        └── 95, 97, 99

------------------------------

generatedTree.delete(39)
generatedTree.delete(97)

------------------------------

└── 64
    ├── 31, 57
    │   ├── 24, 26
    │   ├── 34
    │   └── 59, 60
    └── 81, 85
        ├── 74, 77, 78
        ├── 83
        └── 95, 99


------------------------------

END - TEST 176


START - TEST 177
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(59);
generatedTree.insert2pass(86);
generatedTree.insert2pass(52);
generatedTree.insert2pass(29);
generatedTree.insert2pass(67);
generatedTree.insert2pass(28);
generatedTree.insert2pass(51);
generatedTree.insert2pass(99);
generatedTree.insert2pass(47);
generatedTree.insert2pass(74);
generatedTree.insert2pass(37);
generatedTree.insert2pass(72);
generatedTree.insert2pass(39);
generatedTree.insert2pass(63);
generatedTree.insert2pass(68);
generatedTree.insert2pass(69);
------------------------------

└── 59
    ├── 29, 51
    │   ├── 28
    │   ├── 37, 39, 47
    │   └── 52
    └── 67, 72, 86
        ├── 63
        ├── 68, 69
        ├── 74
        └── 99

------------------------------

generatedTree.delete(39)

------------------------------

└── 59
    ├── 29, 51
    │   ├── 28
    │   ├── 37, 47
    │   └── 52
    └── 67, 72, 86
        ├── 63
        ├── 68, 69
        ├── 74
        └── 99


------------------------------

END - TEST 177


START - TEST 178
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(98);
generatedTree.insert2pass(11);
generatedTree.insert2pass(13);
generatedTree.insert2pass(94);
generatedTree.insert2pass(89);
generatedTree.insert2pass(80);
generatedTree.insert2pass(78);
------------------------------

└── 13, 94
    ├── 11
    ├── 78, 80, 89
    └── 98

------------------------------

generatedTree.delete(94)
generatedTree.delete(13)
generatedTree.delete(11)

------------------------------

└── 89
    ├── 78, 80
    └── 98


------------------------------

END - TEST 178


START - TEST 179
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(41);
generatedTree.insert2pass(95);
generatedTree.insert2pass(51);
generatedTree.insert2pass(49);
generatedTree.insert2pass(70);
generatedTree.insert2pass(58);
generatedTree.insert2pass(11);
------------------------------

└── 51
    ├── 11, 41, 49
    └── 58, 70, 95

------------------------------

generatedTree.delete(58)

------------------------------

└── 51
    ├── 11, 41, 49
    └── 70, 95


------------------------------

END - TEST 179


START - TEST 180
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(33);
generatedTree.insert2pass(52);
generatedTree.insert2pass(44);
generatedTree.insert2pass(85);
generatedTree.insert2pass(61);
------------------------------

└── 44
    ├── 33
    └── 52, 61, 85

------------------------------

generatedTree.delete(52)

------------------------------

└── 44
    ├── 33
    └── 61, 85


------------------------------

END - TEST 180


START - TEST 181
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(91);
generatedTree.insert2pass(95);
generatedTree.insert2pass(75);
generatedTree.insert2pass(84);
generatedTree.insert2pass(83);
generatedTree.insert2pass(61);
generatedTree.insert2pass(45);
generatedTree.insert2pass(46);
generatedTree.insert2pass(55);
generatedTree.insert2pass(19);
------------------------------

└── 75
    ├── 46, 61
    │   ├── 19, 45
    │   ├── 55
    │   └── 69
    └── 91
        ├── 83, 84
        └── 95

------------------------------

generatedTree.delete(84)
generatedTree.delete(46)

------------------------------

└── 75
    ├── 45, 61
    │   ├── 19
    │   ├── 55
    │   └── 69
    └── 91
        ├── 83
        └── 95


------------------------------

END - TEST 181


START - TEST 182
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(82);
generatedTree.insert2pass(16);
generatedTree.insert2pass(99);
generatedTree.insert2pass(12);
generatedTree.insert2pass(48);
generatedTree.insert2pass(23);
generatedTree.insert2pass(25);
generatedTree.insert2pass(96);
generatedTree.insert2pass(18);
generatedTree.insert2pass(77);
generatedTree.insert2pass(53);
------------------------------

└── 16, 25, 82
    ├── 12
    ├── 18, 23
    ├── 48, 53, 77
    └── 96, 99

------------------------------

generatedTree.delete(48)
generatedTree.delete(12)

------------------------------

└── 18, 25, 82
    ├── 16
    ├── 23
    ├── 53, 77
    └── 96, 99


------------------------------

END - TEST 182


START - TEST 183
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(66);
generatedTree.insert2pass(36);
generatedTree.insert2pass(70);
generatedTree.insert2pass(17);
generatedTree.insert2pass(37);
generatedTree.insert2pass(22);
generatedTree.insert2pass(61);
generatedTree.insert2pass(93);
generatedTree.insert2pass(30);
generatedTree.insert2pass(27);
generatedTree.insert2pass(90);
generatedTree.insert2pass(92);
generatedTree.insert2pass(62);
generatedTree.insert2pass(91);
generatedTree.insert2pass(71);
------------------------------

└── 36
    ├── 22
    │   ├── 17
    │   └── 27, 30
    └── 66, 90
        ├── 37, 61, 62
        ├── 70, 71
        └── 91, 92, 93

------------------------------

generatedTree.delete(70)
generatedTree.delete(71)

------------------------------

└── 36
    ├── 22
    │   ├── 17
    │   └── 27, 30
    └── 62, 90
        ├── 37, 61
        ├── 66
        └── 91, 92, 93


------------------------------

END - TEST 183


START - TEST 184
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(44);
generatedTree.insert2pass(77);
generatedTree.insert2pass(36);
generatedTree.insert2pass(56);
generatedTree.insert2pass(49);
generatedTree.insert2pass(37);
generatedTree.insert2pass(74);
generatedTree.insert2pass(55);
generatedTree.insert2pass(78);
generatedTree.insert2pass(89);
------------------------------

└── 44, 56, 77
    ├── 36, 37
    ├── 49, 55
    ├── 74
    └── 78, 89

------------------------------

generatedTree.delete(89)

------------------------------

└── 44, 56, 77
    ├── 36, 37
    ├── 49, 55
    ├── 74
    └── 78


------------------------------

END - TEST 184


START - TEST 185
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(49);
generatedTree.insert2pass(38);
generatedTree.insert2pass(55);
generatedTree.insert2pass(84);
generatedTree.insert2pass(31);
generatedTree.insert2pass(39);
generatedTree.insert2pass(86);
generatedTree.insert2pass(11);
generatedTree.insert2pass(94);
generatedTree.insert2pass(75);
generatedTree.insert2pass(54);
------------------------------

└── 38, 49, 84
    ├── 11, 31
    ├── 39
    ├── 54, 55, 75
    └── 86, 94

------------------------------

generatedTree.delete(31)
generatedTree.delete(84)

------------------------------

└── 38, 49, 75
    ├── 11
    ├── 39
    ├── 54, 55
    └── 86, 94


------------------------------

END - TEST 185


START - TEST 186
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(53);
generatedTree.insert2pass(51);
generatedTree.insert2pass(82);
generatedTree.insert2pass(79);
generatedTree.insert2pass(52);
generatedTree.insert2pass(61);
generatedTree.insert2pass(98);
generatedTree.insert2pass(94);
generatedTree.insert2pass(62);
generatedTree.insert2pass(71);
generatedTree.insert2pass(43);
generatedTree.insert2pass(40);
generatedTree.insert2pass(23);
generatedTree.insert2pass(35);
generatedTree.insert2pass(63);
generatedTree.insert2pass(74);
generatedTree.insert2pass(47);
generatedTree.insert2pass(48);
------------------------------

└── 53
    ├── 40, 51
    │   ├── 23, 35
    │   ├── 43, 47, 48
    │   └── 52
    └── 62, 79
        ├── 61
        ├── 63, 71, 74
        └── 82, 94, 98

------------------------------

generatedTree.delete(48)

------------------------------

└── 53
    ├── 40, 51
    │   ├── 23, 35
    │   ├── 43, 47
    │   └── 52
    └── 62, 79
        ├── 61
        ├── 63, 71, 74
        └── 82, 94, 98


------------------------------

END - TEST 186


START - TEST 187
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(24);
generatedTree.insert2pass(44);
generatedTree.insert2pass(76);
generatedTree.insert2pass(41);
generatedTree.insert2pass(91);
generatedTree.insert2pass(39);
generatedTree.insert2pass(87);
generatedTree.insert2pass(71);
generatedTree.insert2pass(22);
generatedTree.insert2pass(72);
generatedTree.insert2pass(51);
generatedTree.insert2pass(11);
generatedTree.insert2pass(46);
generatedTree.insert2pass(45);
generatedTree.insert2pass(73);
generatedTree.insert2pass(70);
generatedTree.insert2pass(30);
generatedTree.insert2pass(37);
generatedTree.insert2pass(14);
generatedTree.insert2pass(47);
------------------------------

└── 44
    ├── 22, 39
    │   ├── 11, 14
    │   ├── 24, 30, 37
    │   └── 41
    └── 51, 72, 87
        ├── 45, 46, 47
        ├── 70, 71
        ├── 73, 76
        └── 91

------------------------------

generatedTree.delete(39)
generatedTree.delete(71)

------------------------------

└── 44
    ├── 22, 37
    │   ├── 11, 14
    │   ├── 24, 30
    │   └── 41
    └── 51, 72, 87
        ├── 45, 46, 47
        ├── 70
        ├── 73, 76
        └── 91


------------------------------

END - TEST 187


START - TEST 188
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(32);
generatedTree.insert2pass(16);
generatedTree.insert2pass(59);
generatedTree.insert2pass(93);
generatedTree.insert2pass(42);
generatedTree.insert2pass(95);
generatedTree.insert2pass(77);
generatedTree.insert2pass(74);
generatedTree.insert2pass(80);
generatedTree.insert2pass(47);
------------------------------

└── 32, 59, 93
    ├── 16
    ├── 42, 47
    ├── 74, 77, 80
    └── 95

------------------------------

generatedTree.delete(80)

------------------------------

└── 32, 59, 93
    ├── 16
    ├── 42, 47
    ├── 74, 77
    └── 95


------------------------------

END - TEST 188


START - TEST 189
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(54);
generatedTree.insert2pass(44);
generatedTree.insert2pass(52);
generatedTree.insert2pass(89);
generatedTree.insert2pass(83);
generatedTree.insert2pass(26);
generatedTree.insert2pass(38);
generatedTree.insert2pass(98);
generatedTree.insert2pass(19);
generatedTree.insert2pass(50);
generatedTree.insert2pass(43);
generatedTree.insert2pass(22);
generatedTree.insert2pass(13);
generatedTree.insert2pass(31);
generatedTree.insert2pass(73);
------------------------------

└── 52
    ├── 22, 38
    │   ├── 13, 19
    │   ├── 26, 31
    │   └── 43, 44, 50
    └── 83
        ├── 54, 73
        └── 89, 98

------------------------------

generatedTree.delete(50)
generatedTree.delete(44)

------------------------------

└── 52
    ├── 22, 38
    │   ├── 13, 19
    │   ├── 26, 31
    │   └── 43
    └── 83
        ├── 54, 73
        └── 89, 98


------------------------------

END - TEST 189


START - TEST 190
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(66);
generatedTree.insert2pass(46);
generatedTree.insert2pass(35);
generatedTree.insert2pass(80);
generatedTree.insert2pass(68);
generatedTree.insert2pass(82);
generatedTree.insert2pass(94);
generatedTree.insert2pass(24);
generatedTree.insert2pass(75);
generatedTree.insert2pass(14);
generatedTree.insert2pass(71);
generatedTree.insert2pass(76);
generatedTree.insert2pass(39);
generatedTree.insert2pass(61);
generatedTree.insert2pass(25);
------------------------------

└── 68
    ├── 30, 46
    │   ├── 14, 24, 25
    │   ├── 35, 39
    │   └── 61, 66
    └── 75, 82
        ├── 71
        ├── 76, 80
        └── 94

------------------------------

generatedTree.delete(68)
generatedTree.delete(35)
generatedTree.delete(25)

------------------------------

└── 66
    ├── 30, 46
    │   ├── 14, 24
    │   ├── 39
    │   └── 61
    └── 75, 82
        ├── 71
        ├── 76, 80
        └── 94


------------------------------

END - TEST 190


START - TEST 191
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(71);
generatedTree.insert2pass(70);
generatedTree.insert2pass(35);
generatedTree.insert2pass(11);
generatedTree.insert2pass(23);
generatedTree.insert2pass(18);
generatedTree.insert2pass(68);
generatedTree.insert2pass(43);
generatedTree.insert2pass(47);
generatedTree.insert2pass(12);
generatedTree.insert2pass(32);
------------------------------

└── 23, 43, 70
    ├── 11, 12, 18
    ├── 32, 35
    ├── 47, 68
    └── 71

------------------------------

generatedTree.delete(71)
generatedTree.delete(12)

------------------------------

└── 23, 43, 68
    ├── 11, 18
    ├── 32, 35
    ├── 47
    └── 70


------------------------------

END - TEST 191


START - TEST 192
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(69);
generatedTree.insert2pass(48);
generatedTree.insert2pass(41);
generatedTree.insert2pass(53);
generatedTree.insert2pass(82);
generatedTree.insert2pass(54);
generatedTree.insert2pass(83);
generatedTree.insert2pass(44);
generatedTree.insert2pass(77);
generatedTree.insert2pass(97);
generatedTree.insert2pass(21);
generatedTree.insert2pass(68);
generatedTree.insert2pass(30);
generatedTree.insert2pass(37);
generatedTree.insert2pass(46);
generatedTree.insert2pass(61);
generatedTree.insert2pass(38);
generatedTree.insert2pass(16);
generatedTree.insert2pass(59);
------------------------------

└── 48, 69
    ├── 30, 41
    │   ├── 16, 21
    │   ├── 37, 38
    │   └── 44, 46
    ├── 54
    │   ├── 53
    │   └── 59, 61, 68
    └── 82
        ├── 77
        └── 83, 97

------------------------------

generatedTree.delete(61)
generatedTree.delete(54)

------------------------------

└── 41, 69
    ├── 30
    │   ├── 16, 21
    │   └── 37, 38
    ├── 48, 59
    │   ├── 44, 46
    │   ├── 53
    │   └── 68
    └── 82
        ├── 77
        └── 83, 97


------------------------------

END - TEST 192


START - TEST 193
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(34);
generatedTree.insert2pass(29);
generatedTree.insert2pass(89);
generatedTree.insert2pass(97);
generatedTree.insert2pass(21);
generatedTree.insert2pass(36);
generatedTree.insert2pass(58);
generatedTree.insert2pass(22);
generatedTree.insert2pass(44);
generatedTree.insert2pass(62);
generatedTree.insert2pass(73);
generatedTree.insert2pass(20);
generatedTree.insert2pass(59);
generatedTree.insert2pass(23);
------------------------------

└── 44
    ├── 22, 34
    │   ├── 20, 21
    │   ├── 23, 29
    │   └── 36
    └── 62, 89
        ├── 58, 59
        ├── 73
        └── 97

------------------------------

generatedTree.delete(36)
generatedTree.delete(20)

------------------------------

└── 44
    ├── 22, 29
    │   ├── 21
    │   ├── 23
    │   └── 34
    └── 62, 89
        ├── 58, 59
        ├── 73
        └── 97


------------------------------

END - TEST 193


START - TEST 194
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(22);
generatedTree.insert2pass(61);
generatedTree.insert2pass(48);
generatedTree.insert2pass(90);
generatedTree.insert2pass(31);
generatedTree.insert2pass(19);
generatedTree.insert2pass(77);
generatedTree.insert2pass(99);
generatedTree.insert2pass(71);
generatedTree.insert2pass(72);
generatedTree.insert2pass(12);
generatedTree.insert2pass(21);
generatedTree.insert2pass(66);
------------------------------

└── 48
    ├── 22
    │   ├── 12, 19, 21
    │   └── 31
    └── 71, 77
        ├── 61, 66
        ├── 72
        └── 90, 99

------------------------------

generatedTree.delete(31)

------------------------------

└── 71
    ├── 21, 48
    │   ├── 12, 19
    │   ├── 22
    │   └── 61, 66
    └── 77
        ├── 72
        └── 90, 99


------------------------------

END - TEST 194


START - TEST 195
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(30);
generatedTree.insert2pass(61);
generatedTree.insert2pass(44);
generatedTree.insert2pass(50);
generatedTree.insert2pass(60);
generatedTree.insert2pass(68);
generatedTree.insert2pass(43);
generatedTree.insert2pass(25);
generatedTree.insert2pass(38);
generatedTree.insert2pass(63);
generatedTree.insert2pass(94);
generatedTree.insert2pass(12);
generatedTree.insert2pass(45);
generatedTree.insert2pass(95);
generatedTree.insert2pass(46);
generatedTree.insert2pass(66);
generatedTree.insert2pass(62);
generatedTree.insert2pass(54);
generatedTree.insert2pass(26);
------------------------------

└── 44, 63
    ├── 30
    │   ├── 12, 25, 26
    │   └── 38, 43
    ├── 46, 60
    │   ├── 45
    │   ├── 50, 54
    │   └── 61, 62
    └── 94
        ├── 66, 68
        └── 95

------------------------------

generatedTree.delete(61)
generatedTree.delete(25)
generatedTree.delete(66)

------------------------------

└── 46
    ├── 30, 44
    │   ├── 12, 26
    │   ├── 38, 43
    │   └── 45
    └── 60, 63, 94
        ├── 50, 54
        ├── 62
        ├── 68
        └── 95


------------------------------

END - TEST 195


START - TEST 196
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(95);
generatedTree.insert2pass(49);
generatedTree.insert2pass(94);
generatedTree.insert2pass(61);
generatedTree.insert2pass(69);
generatedTree.insert2pass(77);
generatedTree.insert2pass(66);
generatedTree.insert2pass(29);
generatedTree.insert2pass(50);
generatedTree.insert2pass(96);
generatedTree.insert2pass(98);
generatedTree.insert2pass(13);
generatedTree.insert2pass(40);
generatedTree.insert2pass(79);
generatedTree.insert2pass(82);
generatedTree.insert2pass(93);
generatedTree.insert2pass(99);
generatedTree.insert2pass(32);
generatedTree.insert2pass(34);
generatedTree.insert2pass(41);
------------------------------

└── 61, 79
    ├── 29, 34, 49
    │   ├── 13
    │   ├── 32
    │   ├── 40, 41
    │   └── 50
    ├── 69
    │   ├── 66
    │   └── 77
    └── 94, 96
        ├── 82, 93
        ├── 95
        └── 98, 99

------------------------------

generatedTree.delete(82)

------------------------------

└── 61, 79
    ├── 29, 34, 49
    │   ├── 13
    │   ├── 32
    │   ├── 40, 41
    │   └── 50
    ├── 69
    │   ├── 66
    │   └── 77
    └── 94, 96
        ├── 93
        ├── 95
        └── 98, 99


------------------------------

END - TEST 196


START - TEST 197
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(11);
generatedTree.insert2pass(66);
generatedTree.insert2pass(46);
generatedTree.insert2pass(72);
generatedTree.insert2pass(40);
generatedTree.insert2pass(77);
------------------------------

└── 46
    ├── 11, 40
    └── 66, 72, 77

------------------------------

generatedTree.delete(40)
generatedTree.delete(46)
generatedTree.delete(11)

------------------------------

└── 72
    ├── 66
    └── 77


------------------------------

END - TEST 197


START - TEST 198
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(83);
generatedTree.insert2pass(95);
generatedTree.insert2pass(29);
generatedTree.insert2pass(76);
generatedTree.insert2pass(36);
generatedTree.insert2pass(42);
generatedTree.insert2pass(91);
generatedTree.insert2pass(23);
generatedTree.insert2pass(27);
generatedTree.insert2pass(32);
generatedTree.insert2pass(60);
generatedTree.insert2pass(33);
generatedTree.insert2pass(77);
------------------------------

└── 36
    ├── 27
    │   ├── 23
    │   └── 29, 32, 33
    └── 60, 83
        ├── 42
        ├── 76, 77
        └── 91, 95

------------------------------

generatedTree.delete(29)
generatedTree.delete(91)
generatedTree.delete(83)

------------------------------

└── 36
    ├── 27
    │   ├── 23
    │   └── 32, 33
    └── 60, 77
        ├── 42
        ├── 76
        └── 95


------------------------------

END - TEST 198


START - TEST 199
------------------------------
BTree<Integer> generatedTree = new BTree<Integer>(2);
generatedTree.insert2pass(38);
generatedTree.insert2pass(75);
generatedTree.insert2pass(55);
generatedTree.insert2pass(31);
generatedTree.insert2pass(95);
generatedTree.insert2pass(50);
generatedTree.insert2pass(86);
generatedTree.insert2pass(46);
generatedTree.insert2pass(49);
generatedTree.insert2pass(59);
generatedTree.insert2pass(87);
generatedTree.insert2pass(33);
generatedTree.insert2pass(81);
generatedTree.insert2pass(35);
------------------------------

└── 38, 55, 86
    ├── 31, 33, 35
    ├── 46, 49, 50
    ├── 59, 75, 81
    └── 87, 95

------------------------------

generatedTree.delete(81)
generatedTree.delete(87)
generatedTree.delete(59)

------------------------------

└── 38, 55, 86
    ├── 31, 33, 35
    ├── 46, 49, 50
    ├── 75
    └── 95


------------------------------

END - TEST 199
